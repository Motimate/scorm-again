{"version":3,"file":"scorm12.js","mappings":"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","sources":["webpack://scorm-again/./node_modules/lodash.debounce/index.js","webpack://scorm-again/./src/BaseAPI.js","webpack://scorm-again/./src/Scorm12API.js","webpack://scorm-again/./src/cmi/common.js","webpack://scorm-again/./src/cmi/scorm12_cmi.js","webpack://scorm-again/./src/constants/api_constants.js","webpack://scorm-again/./src/constants/error_codes.js","webpack://scorm-again/./src/constants/regex.js","webpack://scorm-again/./src/exceptions.js","webpack://scorm-again/./src/utilities.js","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/compat get default export","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/global","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object","webpack://scorm-again/./src/exports/scorm12.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","// @flow\nimport {CMIArray} from './cmi/common';\nimport {ValidationError} from './exceptions';\nimport ErrorCodes from './constants/error_codes';\nimport APIConstants from './constants/api_constants';\nimport {unflatten} from './utilities';\nimport debounce from 'lodash.debounce';\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on it's own.\n */\nexport default class BaseAPI {\n  #timeout;\n  #error_codes;\n  #settings = {\n    autocommit: false,\n    autocommitSeconds: 10,\n    asyncCommit: false,\n    sendBeaconCommit: false,\n    lmsCommitUrl: false,\n    dataCommitFormat: 'json', // valid formats are 'json' or 'flattened', 'params'\n    commitRequestDataType: 'application/json;charset=UTF-8',\n    autoProgress: false,\n    logLevel: global_constants.LOG_LEVEL_ERROR,\n    selfReportSessionTime: false,\n    alwaysSendTotalTime: false,\n    strict_errors: true,\n    xhrHeaders: {},\n    xhrWithCredentials: false,\n    responseHandler: function(xhr) {\n      let result;\n      if (typeof xhr !== 'undefined') {\n        result = JSON.parse(xhr.responseText);\n        if (result === null || !{}.hasOwnProperty.call(result, 'result')) {\n          result = {};\n          if (xhr.status === 200) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        }\n      }\n      return result;\n    },\n    requestHandler: function(commitObject) {\n      return commitObject;\n    },\n    onLogMessage: function(messageLevel, logMessage) {\n      switch (messageLevel) {\n        case global_constants.LOG_LEVEL_ERROR:\n          console.error(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_WARNING:\n          console.warn(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_INFO:\n          console.info(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_DEBUG:\n          if (console.debug) {\n            console.debug(logMessage);\n          } else {\n            console.log(logMessage);\n          }\n          break;\n      }\n    },\n  };\n  cmi;\n  startingData: {};\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {object} error_codes\n   * @param {object} settings\n   */\n  constructor(error_codes, settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError('Cannot construct BaseAPI instances directly');\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = 0;\n    this.listenerArray = [];\n\n    this.#timeout = null;\n    this.#error_codes = error_codes;\n\n    this.settings = settings;\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n      callbackName: String,\n      initializeMessage?: String,\n      terminationMessage?: String) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this.#error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this.#error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = 0;\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Getter for #error_codes\n   * @return {object}\n   */\n  get error_codes() {\n    return this.#error_codes;\n  }\n\n  /**\n   * Getter for #settings\n   * @return {object}\n   */\n  get settings() {\n    return this.#settings;\n  }\n\n  /**\n   * Setter for #settings\n   * @param {object} settings\n   */\n  set settings(settings: Object) {\n    this.#settings = {...this.#settings, ...settings};\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(\n      callbackName: String,\n      checkTerminated: boolean) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.TERMINATION_BEFORE_INIT,\n        this.#error_codes.MULTIPLE_TERMINATION)) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result = this.storeData(true);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        typeof result.errorCode !== 'undefined' && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n      callbackName: String,\n      checkTerminated: boolean,\n      CMIElement: String) {\n    let returnValue;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.RETRIEVE_BEFORE_INIT,\n        this.#error_codes.RETRIEVE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(callbackName, CMIElement, ': returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n      callbackName: String,\n      commitCallback: String,\n      checkTerminated: boolean,\n      CMIElement,\n      value) {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.STORE_BEFORE_INIT,\n        this.#error_codes.STORE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === '0') {\n      if (this.settings.autocommit && !this.#timeout) {\n        this.scheduleCommit(this.settings.autocommitSeconds * 1000, commitCallback);\n      }\n    }\n\n    this.apiLog(callbackName, CMIElement,\n        ': ' + value + ': result: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(\n      callbackName: String,\n      checkTerminated: boolean) {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.COMMIT_BEFORE_INIT,\n        this.#error_codes.COMMIT_AFTER_TERM)) {\n      const result = this.storeData(false);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      this.apiLog(callbackName, 'HttpRequest', ' Result: ' + returnValue,\n          global_constants.LOG_LEVEL_DEBUG);\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: String) {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n      checkTerminated: boolean,\n      beforeInitError: number,\n      afterTermError?: number) {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   */\n  apiLog(\n      functionName: String,\n      CMIElement: String,\n      logMessage: String,\n      messageLevel: number) {\n    logMessage = this.formatMessage(functionName, CMIElement, logMessage);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} message\n   * @return {string}\n   */\n  formatMessage(functionName: String, CMIElement: String, message: String) {\n    const baseLength = 20;\n    let messageString = '';\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += ' ';\n    }\n\n    messageString += ': ';\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += ' ';\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: String, tester: String) {\n    return str && tester && str.match(tester);\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {*} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  _checkObjectHasProperty(refObject, attribute: String) {\n    return Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n          Object.getPrototypeOf(refObject), attribute) ||\n      (attribute in refObject);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(_errorNumber, _detail) {\n    throw new Error(\n        'The getLmsErrorMessageDetails method has not been implemented');\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement) {\n    throw new Error('The getCMIValue method has not been implemented');\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement, _value) {\n    throw new Error('The setCMIValue method has not been implemented');\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n      methodName: String, scorm2004: boolean, CMIElement, value) {\n    if (!CMIElement || CMIElement === '') {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      const attribute = structure[i];\n\n      if (i === structure.length - 1) {\n        if (scorm2004 && (attribute.substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          this.throwSCORMError(this.#error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (this.isInitialized() &&\n            this.stringMatches(CMIElement, '\\\\.correct_responses\\\\.\\\\d+')) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === 0) {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[i + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(CMIElement, value,\n                  foundFirstIndex);\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update i value to skip the array position\n            i++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(methodName, null,\n          `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n          global_constants.LOG_LEVEL_WARNING);\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement, _value) {\n    // just a stub method\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {*}\n   * @abstract\n   */\n  getChildElement(_CMIElement, _value, _foundFirstIndex) {\n    throw new Error('The getChildElement method has not been implemented');\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  _commonGetCMIValue(methodName: String, scorm2004: boolean, CMIElement) {\n    if (!CMIElement || CMIElement === '') {\n      return '';\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      attribute = structure[i];\n\n      if (!scorm2004) {\n        if (i === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if ((String(attribute).substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          const target = String(attribute).substr(8, String(attribute).length - 9);\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[i + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(this.#error_codes.VALUE_NOT_INITIALIZED,\n                uninitializedErrorMessage);\n            break;\n          }\n\n          // Have to update i value to skip the array position\n          i++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === '_children') {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === '_count') {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized() {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated() {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog('on', functionName, `Added event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      const removeIndex = this.listenerArray.findIndex((obj) =>\n        obj.functionName === functionName &&\n        obj.CMIElement === CMIElement &&\n        obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog('off', functionName, `Removed event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: String) {\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray = this.listenerArray.filter((obj) =>\n        obj.functionName !== functionName &&\n        obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  processListeners(functionName: String, CMIElement: String, value: any) {\n    this.apiLog(functionName, CMIElement, value);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (CMIElement && listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) ===\n        '*') {\n        CMIElementsMatch = CMIElement.indexOf(listener.CMIElement.substring(0,\n            listener.CMIElement.length - 1)) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message: String) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog('throwSCORMError', null, errorNumber + ': ' + message,\n        global_constants.LOG_LEVEL_ERROR);\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: String) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = 0;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {string}\n   * @abstract\n   */\n  storeData(_calculateTotalTime) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromFlattenedJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(a, c, a_pattern) {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === 'id') {\n            return -1;\n          } else if (a_match[3] === 'type') {\n            if (c_match[3] === 'id') {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function(key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function([a, b], [c, d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : 'cmi';\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + '.' : '') + key;\n        const value = json[key];\n\n        if (value['childArray']) {\n          for (let i = 0; i < value['childArray'].length; i++) {\n            this.loadFromJSON(value['childArray'][i],\n                currentCMIElement + '.' + i);\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString() {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({cmi});\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject() {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {*}\n   * @abstract\n   */\n  renderCommitCMI(_terminateCommit) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {object|Array} params\n   * @param {boolean} immediate\n   * @return {object}\n   */\n  processHttpRequest(url: String, params, immediate = false) {\n    const api = this;\n    const process = function(url, params, settings, error_codes) {\n      const genericError = {\n        'result': global_constants.SCORM_FALSE,\n        'errorCode': error_codes.GENERAL,\n      };\n\n      let result;\n      if (!settings.sendBeaconCommit) {\n        const httpReq = new XMLHttpRequest();\n        httpReq.open('POST', url, settings.asyncCommit);\n\n        if (Object.keys(settings.xhrHeaders).length) {\n          Object.keys(settings.xhrHeaders).forEach((header) => {\n            httpReq.setRequestHeader(header, settings.xhrHeaders[header]);\n          });\n        }\n\n        httpReq.withCredentials = settings.xhrWithCredentials;\n\n        if (settings.asyncCommit) {\n          httpReq.onload = function(e) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          };\n        }\n        try {\n          params = settings.requestHandler(params);\n          if (params instanceof Array) {\n            httpReq.setRequestHeader('Content-Type',\n                'application/x-www-form-urlencoded');\n            httpReq.send(params.join('&'));\n          } else {\n            httpReq.setRequestHeader('Content-Type',\n                settings.commitRequestDataType);\n            httpReq.send(JSON.stringify(params));\n          }\n\n          if (!settings.asyncCommit) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          } else {\n            result = {};\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n            api.processListeners('CommitSuccess');\n            return result;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      } else {\n        try {\n          params = settings.requestHandler(params);\n          fetch(url, {\n            method: 'POST',\n            body: params instanceof Array ? params.join('&') : JSON.stringify(params),\n            headers: {\n              ...settings.xhrHeaders,\n              'Content-Type': settings.commitRequestDataType,\n            },\n            credentials: settings.xhrWithCredentials ? 'include' : undefined,\n            keepalive: true,\n          });\n          result = {};\n          result.result = global_constants.SCORM_TRUE;\n          result.errorCode = 0;\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      }\n\n      if (typeof result === 'undefined') {\n        api.processListeners('CommitError');\n        return genericError;\n      }\n\n      if (result.result === true ||\n        result.result === global_constants.SCORM_TRUE) {\n        api.processListeners('CommitSuccess');\n      } else {\n        api.processListeners('CommitError');\n      }\n\n      return result;\n    };\n\n    if (typeof debounce !== 'undefined') {\n      const debounced = debounce(process, 500);\n      debounced(url, params, this.settings, this.error_codes);\n\n      // if we're terminating, go ahead and commit immediately\n      if (immediate) {\n        debounced.flush();\n      }\n\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return process(url, params, this.settings, this.error_codes);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this.#timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog('scheduleCommit', '', 'scheduled',\n        global_constants.LOG_LEVEL_DEBUG);\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this.#timeout) {\n      this.#timeout.cancel();\n      this.#timeout = null;\n      this.apiLog('clearScheduledCommit', '', 'cleared',\n          global_constants.LOG_LEVEL_DEBUG);\n    }\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  #API;\n  #cancelled = false;\n  #timeout;\n  #callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this.#API = API;\n    this.#timeout = setTimeout(this.wrapper.bind(this), when);\n    this.#callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this.#cancelled = true;\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this.#cancelled) {\n      this.#API.commit(this.#callback);\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  CMI,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject, NAV,\n} from './cmi/scorm12_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * API class for SCORM 1.2\n */\nexport default class Scorm12API extends BaseAPI {\n  /**\n   * Constructor for SCORM 1.2 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm12_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n\n    // Rename functions to match 1.2 Spec and expose to modules\n    this.LMSInitialize = this.lmsInitialize;\n    this.LMSFinish = this.lmsFinish;\n    this.LMSGetValue = this.lmsGetValue;\n    this.LMSSetValue = this.lmsSetValue;\n    this.LMSCommit = this.lmsCommit;\n    this.LMSGetLastError = this.lmsGetLastError;\n    this.LMSGetErrorString = this.lmsGetErrorString;\n    this.LMSGetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * lmsInitialize function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('LMSInitialize', 'LMS was already initialized!',\n        'LMS is already finished!');\n  }\n\n  /**\n   * LMSFinish function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsFinish() {\n    const result = this.terminate('LMSFinish', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.nav.event !== '') {\n        if (this.nav.event === 'continue') {\n          this.processListeners('SequenceNext');\n        } else {\n          this.processListeners('SequencePrevious');\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * LMSGetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('LMSGetValue', false, CMIElement);\n  }\n\n  /**\n   * LMSSetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('LMSSetValue', 'LMSCommit', false, CMIElement, value);\n  }\n\n  /**\n   * LMSCommit function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('LMSCommit', false);\n  }\n\n  /**\n   * LMSGetLastError function from SCORM 1.2 Spec\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('LMSGetLastError');\n  }\n\n  /**\n   * LMSGetErrorString function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('LMSGetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * LMSGetDiagnostic function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('LMSGetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('LMSSetValue', false, CMIElement, value);\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('getCMIValue', false, CMIElement);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @param {boolean} foundFirstIndex\n   * @return {object}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsCorrectResponsesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Validates Correct Response values\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {boolean}\n   */\n  validateCorrectResponse(CMIElement, value) {\n    return true;\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {*} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = 'No Error';\n    let detailMessage = 'No Error';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm12_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm12_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm12_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {Scorm12API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.core.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      const originalStatus = this.cmi.core.lesson_status;\n      if (originalStatus === 'not attempted') {\n        this.cmi.core.lesson_status = 'completed';\n      }\n\n      if (this.cmi.core.lesson_mode === 'normal') {\n        if (this.cmi.core.credit === 'credit') {\n          if (this.settings.mastery_override &&\n              this.cmi.student_data.mastery_score !== '' &&\n              this.cmi.core.score.raw !== '') {\n            if (parseFloat(this.cmi.core.score.raw) >= parseFloat(this.cmi.student_data.mastery_score)) {\n              this.cmi.core.lesson_status = 'passed';\n            } else {\n              this.cmi.core.lesson_status = 'failed';\n            }\n          }\n        }\n      } else if (this.cmi.core.lesson_mode === 'browse') {\n        if ((this.startingData?.cmi?.core?.lesson_status || '') === '' && originalStatus === 'not attempted') {\n          this.cmi.core.lesson_status = 'browsed';\n        }\n      }\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' + (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      return this.processHttpRequest(this.settings.lmsCommitUrl, commitObject, terminateCommit);\n    } else {\n      return global_constants.SCORM_TRUE;\n    }\n  }\n}\n","// @flow\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkValidFormat(\n    value: String,\n    regexPattern: String,\n    errorCode: number,\n    errorClass: function,\n    allowEmptyString?: boolean) {\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === '') {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === '') {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {*} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n    value: any,\n    rangePattern: String,\n    errorCode: number,\n    errorClass: function) {\n  const ranges = rangePattern.split('#');\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if ((ranges[1] === '*') || (value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass.prototype.constructor(errorCode);\n    }\n  } else {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n}\n\n/**\n * Base class for API cmi objects\n */\nexport class BaseCMI {\n  jsonString = false;\n  #initialized = false;\n  #start_time;\n\n  /**\n   * Constructor for BaseCMI, just marks the class as abstract\n   */\n  constructor() {\n    if (new.target === BaseCMI) {\n      throw new TypeError('Cannot construct BaseCMI instances directly');\n    }\n  }\n\n  /**\n   * Getter for #initialized\n   * @return {boolean}\n   */\n  get initialized() {\n    return this.#initialized;\n  }\n\n  /**\n   * Getter for #start_time\n   * @return {Number}\n   */\n  get start_time() {\n    return this.#start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    this.#initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime() {\n    this.#start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  /**\n   * Constructor for *.score\n   * @param {string} score_children\n   * @param {string} score_range\n   * @param {string} max\n   * @param {number} invalidErrorCode\n   * @param {number} invalidTypeCode\n   * @param {number} invalidRangeCode\n   * @param {string} decimalRegex\n   * @param {class} errorClass\n   */\n  constructor(\n      {\n        score_children,\n        score_range,\n        max,\n        invalidErrorCode,\n        invalidTypeCode,\n        invalidRangeCode,\n        decimalRegex,\n        errorClass,\n      }) {\n    super();\n\n    this.#_children = score_children ||\n        scorm12_constants.score_children;\n    this.#_score_range = !score_range ? false : scorm12_regex.score_range;\n    this.#max = (max || max === '') ? max : '100';\n    this.#_invalid_error_code = invalidErrorCode ||\n        scorm12_error_codes.INVALID_SET_VALUE;\n    this.#_invalid_type_code = invalidTypeCode ||\n        scorm12_error_codes.TYPE_MISMATCH;\n    this.#_invalid_range_code = invalidRangeCode ||\n        scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.#_decimal_regex = decimalRegex ||\n        scorm12_regex.CMIDecimal;\n    this.#_error_class = errorClass;\n  }\n\n  #_children;\n  #_score_range;\n  #_invalid_error_code;\n  #_invalid_type_code;\n  #_invalid_range_code;\n  #_decimal_regex;\n  #_error_class;\n  #raw = '';\n  #min = '';\n  #max;\n\n  /**\n   * Getter for _children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throw new this.#_error_class.prototype.constructor(this.#_invalid_error_code);\n  }\n\n  /**\n   * Getter for #raw\n   * @return {string}\n   */\n  get raw() {\n    return this.#raw;\n  }\n\n  /**\n   * Setter for #raw\n   * @param {string} raw\n   */\n  set raw(raw) {\n    if (checkValidFormat(raw, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(raw, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#raw = raw;\n    }\n  }\n\n  /**\n   * Getter for #min\n   * @return {string}\n   */\n  get min() {\n    return this.#min;\n  }\n\n  /**\n   * Setter for #min\n   * @param {string} min\n   */\n  set min(min) {\n    if (checkValidFormat(min, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(min, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#min = min;\n    }\n  }\n\n  /**\n   * Getter for #max\n   * @return {string}\n   */\n  get max() {\n    return this.#max;\n  }\n\n  /**\n   * Setter for #max\n   * @param {string} max\n   */\n  set max(max) {\n    if (checkValidFormat(max, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(max, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {{min: string, max: string, raw: string}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'raw': this.raw,\n      'min': this.min,\n      'max': this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  /**\n   * Constructor cmi *.n arrays\n   * @param {string} children\n   * @param {number} errorCode\n   * @param {class} errorClass\n   */\n  constructor({children, errorCode, errorClass}) {\n    super();\n    this.#_children = children;\n    this.#errorCode = errorCode;\n    this.#errorClass = errorClass;\n    this.childArray = [];\n  }\n\n  #errorCode;\n  #errorClass;\n  #_children;\n\n  /**\n   * Getter for _children\n   * @return {*}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count() {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + ''] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\nimport {Scorm12ValidationError} from '../exceptions';\nimport * as Utilities from '../utilities';\nimport * as Util from '../utilities';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Helper method for throwing Read Only error\n */\nexport function throwReadOnlyError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nexport function throwWriteOnlyError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Invalid Set error\n */\nfunction throwInvalidValueError() {\n  throw new Scorm12ValidationError(scorm12_error_codes.INVALID_SET_VALUE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm12_error_codes.TYPE_MISMATCH,\n      Scorm12ValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidRange(\n    value: any,\n    rangePattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm12_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm12ValidationError,\n      allowEmptyString\n  );\n}\n\n/**\n * Class representing the cmi object for SCORM 1.2\n */\nexport class CMI extends BaseCMI {\n  #_children = '';\n  #_version = '3.4';\n  #launch_data = '';\n  #comments = '';\n  #comments_from_lms = '';\n\n  student_data = null;\n\n  /**\n   * Constructor for the SCORM 1.2 cmi object\n   * @param {string} cmi_children\n   * @param {(CMIStudentData|AICCCMIStudentData)} student_data\n   * @param {boolean} initialized\n   */\n  constructor(cmi_children, student_data, initialized: boolean) {\n    super();\n\n    if (initialized) this.initialize();\n\n    this.#_children = cmi_children ?\n        cmi_children :\n        scorm12_constants.cmi_children;\n    this.core = new CMICore();\n    this.objectives = new CMIObjectives();\n    this.student_data = student_data ? student_data : new CMIStudentData();\n    this.student_preference = new CMIStudentPreference();\n    this.interactions = new CMIInteractions();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.core?.initialize();\n    this.objectives?.initialize();\n    this.student_data?.initialize();\n    this.student_preference?.initialize();\n    this.interactions?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'suspend_data': this.suspend_data,\n      'launch_data': this.launch_data,\n      'comments': this.comments,\n      'comments_from_lms': this.comments_from_lms,\n      'core': this.core,\n      'objectives': this.objectives,\n      'student_data': this.student_data,\n      'student_preference': this.student_preference,\n      'interactions': this.interactions,\n    };\n    delete this.jsonString;\n    return result;\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   */\n  set _version(_version) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.core?.suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (this.core) {\n      this.core.suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #comments\n   * @return {string}\n   */\n  get comments() {\n    return this.#comments;\n  }\n\n  /**\n   * Setter for #comments\n   * @param {string} comments\n   */\n  set comments(comments) {\n    if (check12ValidFormat(comments, scorm12_regex.CMIString4096, true)) {\n      this.#comments = comments;\n    }\n  }\n\n  /**\n   * Getter for #comments_from_lms\n   * @return {string}\n   */\n  get comments_from_lms() {\n    return this.#comments_from_lms;\n  }\n\n  /**\n   * Setter for #comments_from_lms. Can only be called before  initialization.\n   * @param {string} comments_from_lms\n   */\n  set comments_from_lms(comments_from_lms) {\n    !this.initialized ?\n        this.#comments_from_lms = comments_from_lms :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string}\n   */\n  getCurrentTotalTime() {\n    return this.core.getCurrentTotalTime(this.start_time);\n  }\n}\n\n/**\n * Class representing the cmi.core object\n * @extends BaseCMI\n */\nclass CMICore extends BaseCMI {\n  /**\n   * Constructor for cmi.core\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: scorm12_constants.score_children,\n          score_range: scorm12_regex.score_range,\n          invalidErrorCode: scorm12_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: scorm12_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm12_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: Scorm12ValidationError,\n        });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  #_children = scorm12_constants.core_children;\n  #student_id = '';\n  #student_name = '';\n  #lesson_location = '';\n  #credit = '';\n  #lesson_status = 'not attempted';\n  #entry = '';\n  #total_time = '';\n  #lesson_mode = 'normal';\n  #exit = '';\n  #session_time = '00:00:00';\n  #suspend_data = '';\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #student_id\n   * @return {string}\n   */\n  get student_id() {\n    return this.#student_id;\n  }\n\n  /**\n   * Setter for #student_id. Can only be called before  initialization.\n   * @param {string} student_id\n   */\n  set student_id(student_id) {\n    !this.initialized ? this.#student_id = student_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #student_name\n   * @return {string}\n   */\n  get student_name() {\n    return this.#student_name;\n  }\n\n  /**\n   * Setter for #student_name. Can only be called before  initialization.\n   * @param {string} student_name\n   */\n  set student_name(student_name) {\n    !this.initialized ?\n        this.#student_name = student_name :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_location\n   * @return {string}\n   */\n  get lesson_location() {\n    return this.#lesson_location;\n  }\n\n  /**\n   * Setter for #lesson_location\n   * @param {string} lesson_location\n   */\n  set lesson_location(lesson_location) {\n    if (check12ValidFormat(lesson_location, scorm12_regex.CMIString256, true)) {\n      this.#lesson_location = lesson_location;\n    }\n  }\n\n  /**\n   * Getter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_status\n   * @return {string}\n   */\n  get lesson_status() {\n    return this.#lesson_status;\n  }\n\n  /**\n   * Setter for #lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status) {\n    if (this.initialized) {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus)) {\n        this.#lesson_status = lesson_status;\n      }\n    } else {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus2)) {\n        this.#lesson_status = lesson_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #lesson_mode\n   * @return {string}\n   */\n  get lesson_mode() {\n    return this.#lesson_mode;\n  }\n\n  /**\n   * Setter for #lesson_mode. Can only be called before  initialization.\n   * @param {string} lesson_mode\n   */\n  set lesson_mode(lesson_mode) {\n    !this.initialized ? this.#lesson_mode = lesson_mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {*}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Setter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check12ValidFormat(exit, scorm12_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {*}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check12ValidFormat(session_time, scorm12_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check12ValidFormat(suspend_data, scorm12_regex.CMIString4096, true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   * @param {Number} start_time\n   * @return {string}\n   */\n  getCurrentTotalTime(start_time: Number) {\n    let sessionTime = this.#session_time;\n    const startTime = start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsHHMMSS(seconds / 1000);\n    }\n\n    return Utilities.addHHMMSSTimeStrings(\n        this.#total_time,\n        sessionTime,\n        new RegExp(scorm12_regex.CMITimespan),\n    );\n  }\n\n  /**\n   * toJSON for cmi.core\n   *\n   * @return {\n   *    {\n   *      student_name: string,\n   *      entry: string,\n   *      exit: string,\n   *      score: CMIScore,\n   *      student_id: string,\n   *      lesson_mode: string,\n   *      lesson_location: string,\n   *      lesson_status: string,\n   *      credit: string,\n   *      session_time: *\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'student_id': this.student_id,\n      'student_name': this.student_name,\n      'lesson_location': this.lesson_location,\n      'credit': this.credit,\n      'lesson_status': this.lesson_status,\n      'entry': this.entry,\n      'lesson_mode': this.lesson_mode,\n      'exit': this.exit,\n      'session_time': this.session_time,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives object\n * @extends CMIArray\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.objectives_children,\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.student_data object\n * @extends BaseCMI\n */\nexport class CMIStudentData extends BaseCMI {\n  #_children;\n  #mastery_score = '';\n  #max_time_allowed = '';\n  #time_limit_action = '';\n\n  /**\n   * Constructor for cmi.student_data\n   * @param {string} student_data_children\n   */\n  constructor(student_data_children) {\n    super();\n\n    this.#_children = student_data_children ?\n        student_data_children :\n        scorm12_constants.student_data_children;\n  }\n\n  /**\n   * Getter for #_children\n   * @return {*}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #master_score\n   * @return {string}\n   */\n  get mastery_score() {\n    return this.#mastery_score;\n  }\n\n  /**\n   * Setter for #master_score. Can only be called before  initialization.\n   * @param {string} mastery_score\n   */\n  set mastery_score(mastery_score) {\n    !this.initialized ?\n        this.#mastery_score = mastery_score :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n        this.#max_time_allowed = max_time_allowed :\n        throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n        this.#time_limit_action = time_limit_action :\n        throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for cmi.student_data\n   *\n   * @return {\n   *    {\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      mastery_score: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'mastery_score': this.mastery_score,\n      'max_time_allowed': this.max_time_allowed,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.student_preference object\n * @extends BaseCMI\n */\nexport class CMIStudentPreference extends BaseCMI {\n  #_children;\n\n  /**\n   * Constructor for cmi.student_preference\n   * @param {string} student_preference_children\n   */\n  constructor(student_preference_children) {\n    super();\n\n    this.#_children = student_preference_children ?\n        student_preference_children :\n        scorm12_constants.student_preference_children;\n  }\n\n  #audio = '';\n  #language = '';\n  #speed = '';\n  #text = '';\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwInvalidValueError();\n  }\n\n  /**\n   * Getter for #audio\n   * @return {string}\n   */\n  get audio() {\n    return this.#audio;\n  }\n\n  /**\n   * Setter for #audio\n   * @param {string} audio\n   */\n  set audio(audio) {\n    if (check12ValidFormat(audio, scorm12_regex.CMISInteger) &&\n        check12ValidRange(audio, scorm12_regex.audio_range)) {\n      this.#audio = audio;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check12ValidFormat(language, scorm12_regex.CMIString256)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #speed\n   * @return {string}\n   */\n  get speed() {\n    return this.#speed;\n  }\n\n  /**\n   * Setter for #speed\n   * @param {string} speed\n   */\n  set speed(speed) {\n    if (check12ValidFormat(speed, scorm12_regex.CMISInteger) &&\n        check12ValidRange(speed, scorm12_regex.speed_range)) {\n      this.#speed = speed;\n    }\n  }\n\n  /**\n   * Getter for #text\n   * @return {string}\n   */\n  get text() {\n    return this.#text;\n  }\n\n  /**\n   * Setter for #text\n   * @param {string} text\n   */\n  set text(text) {\n    if (check12ValidFormat(text, scorm12_regex.CMISInteger) &&\n        check12ValidRange(text, scorm12_regex.text_range)) {\n      this.#text = text;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio': this.audio,\n      'language': this.language,\n      'speed': this.speed,\n      'text': this.text,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions object\n * @extends BaseCMI\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.interactions\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.interactions_children,\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n object\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm12_error_codes.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  #id = '';\n  #time = '';\n  #type = '';\n  #weighting = '';\n  #student_response = '';\n  #result = '';\n  #latency = '';\n\n  /**\n   * Getter for #id. Should only be called during JSON export.\n   * @return {*}\n   */\n  get id() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #time. Should only be called during JSON export.\n   * @return {*}\n   */\n  get time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#time;\n  }\n\n  /**\n   * Setter for #time\n   * @param {string} time\n   */\n  set time(time) {\n    if (check12ValidFormat(time, scorm12_regex.CMITime)) {\n      this.#time = time;\n    }\n  }\n\n  /**\n   * Getter for #type. Should only be called during JSON export.\n   * @return {*}\n   */\n  get type() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (check12ValidFormat(type, scorm12_regex.CMIType)) {\n      this.#type = type;\n    }\n  }\n\n  /**\n   * Getter for #weighting. Should only be called during JSON export.\n   * @return {*}\n   */\n  get weighting() {\n    return (!this.jsonString) ?\n        throwWriteOnlyError() :\n        this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (check12ValidFormat(weighting, scorm12_regex.CMIDecimal) &&\n        check12ValidRange(weighting, scorm12_regex.weighting_range)) {\n      this.#weighting = weighting;\n    }\n  }\n\n  /**\n   * Getter for #student_response. Should only be called during JSON export.\n   * @return {*}\n   */\n  get student_response() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#student_response;\n  }\n\n  /**\n   * Setter for #student_response\n   * @param {string} student_response\n   */\n  set student_response(student_response) {\n    if (check12ValidFormat(student_response, scorm12_regex.CMIFeedback, true)) {\n      this.#student_response = student_response;\n    }\n  }\n\n  /**\n   * Getter for #result. Should only be called during JSON export.\n   * @return {*}\n   */\n  get result() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check12ValidFormat(result, scorm12_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency. Should only be called during JSON export.\n   * @return {*}\n   */\n  get latency() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (check12ValidFormat(latency, scorm12_regex.CMITimespan)) {\n      this.#latency = latency;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      time: string,\n   *      type: string,\n   *      weighting: string,\n   *      student_response: string,\n   *      result: string,\n   *      latency: string,\n   *      objectives: CMIArray,\n   *      correct_responses: CMIArray\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'time': this.time,\n      'type': this.type,\n      'weighting': this.weighting,\n      'student_response': this.student_response,\n      'result': this.result,\n      'latency': this.latency,\n      'objectives': this.objectives,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new CMIScore(\n        {\n          score_children: scorm12_constants.score_children,\n          score_range: scorm12_regex.score_range,\n          invalidErrorCode: scorm12_error_codes.INVALID_SET_VALUE,\n          invalidTypeCode: scorm12_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm12_error_codes.VALUE_OUT_OF_RANGE,\n          errorClass: Scorm12ValidationError,\n        });\n  }\n\n  #id = '';\n  #status = '';\n\n  /**\n   * Getter for #id\n   * @return {\"\"}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #status\n   * @return {\"\"}\n   */\n  get status() {\n    return this.#status;\n  }\n\n  /**\n   * Setter for #status\n   * @param {string} status\n   */\n  set status(status) {\n    if (check12ValidFormat(status, scorm12_regex.CMIStatus2)) {\n      this.#status = status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   * @return {\n   *    {\n   *      id: string,\n   *      status: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'status': this.status,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  #id = '';\n\n  /**\n   * Getter for #id\n   * @return {\"\"}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.correct_responses.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  #pattern = '';\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check12ValidFormat(pattern, scorm12_regex.CMIFeedback, true)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.correct_responses.n\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for AICC Navigation object\n */\nexport class NAV extends BaseCMI {\n  /**\n   * Constructor for NAV object\n   */\n  constructor() {\n    super();\n  }\n\n  #event = '';\n\n  /**\n   * Getter for #event\n   * @return {string}\n   */\n  get event() {\n    return this.#event;\n  }\n\n  /**\n   * Setter for #event\n   * @param {string} event\n   */\n  set event(event) {\n    if (check12ValidFormat(event, scorm12_regex.NAVEvent)) {\n      this.#event = event;\n    }\n  }\n\n  /**\n   * toJSON for nav object\n   * @return {\n   *    {\n   *      event: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'event': this.event,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\n\nconst global = {\n  SCORM_TRUE: 'true',\n  SCORM_FALSE: 'false',\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12 = {\n  // Children lists\n  cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions',\n  core_children: 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time',\n  score_children: 'raw,min,max',\n  comments_children: 'content,location,time',\n  objectives_children: 'id,score,status',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio,language,speed,text',\n  interactions_children: 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency',\n\n  error_descriptions: {\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use LMSGetDiagnostic for more information',\n    },\n    '201': {\n      basicMessage: 'Invalid argument error',\n      detailMessage: 'Indicates that an argument represents an invalid data model element or is otherwise incorrect.',\n    },\n    '202': {\n      basicMessage: 'Element cannot have children',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    '203': {\n      basicMessage: 'Element not an array - cannot have count',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    '301': {\n      basicMessage: 'Not initialized',\n      detailMessage: 'Indicates that an API call was made before the call to lmsInitialize.',\n    },\n    '401': {\n      basicMessage: 'Not implemented error',\n      detailMessage: 'The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.',\n    },\n    '402': {\n      basicMessage: 'Invalid set value, element is a keyword',\n      detailMessage: 'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    '403': {\n      basicMessage: 'Element is read only',\n      detailMessage: 'LMSSetValue was called with a data model element that can only be read.',\n    },\n    '404': {\n      basicMessage: 'Element is write only',\n      detailMessage: 'LMSGetValue was called on a data model element that can only be written to.',\n    },\n    '405': {\n      basicMessage: 'Incorrect Data Type',\n      detailMessage: 'LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation',\n    student_preference_children: 'audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows',\n    student_data_children: 'attempt_number,tries,mastery_score,max_time_allowed,time_limit_action',\n    student_demographics_children: 'city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience',\n    tries_children: 'time,status,score',\n    attempt_records_children: 'score,lesson_status',\n    paths_children: 'location_id,date,time,status,why_left,time_in_element',\n  },\n};\n\nconst scorm2004 = {\n  // Children lists\n  cmi_children: '_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time',\n  comments_children: 'comment,timestamp,location',\n  score_children: 'max,raw,scaled,min',\n  objectives_children: 'progress_measure,completion_status,success_status,description,score,id',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio_level,audio_captioning,delivery_speed,language',\n  interactions_children: 'id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description',\n\n  error_descriptions: {\n    '0': {\n      basicMessage: 'No Error',\n      detailMessage: 'No error occurred, the previous API call was successful.',\n    },\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use GetDiagnostic for more information.',\n    },\n    '102': {\n      basicMessage: 'General Initialization Failure',\n      detailMessage: 'Call to Initialize failed for an unknown reason.',\n    },\n    '103': {\n      basicMessage: 'Already Initialized',\n      detailMessage: 'Call to Initialize failed because Initialize was already called.',\n    },\n    '104': {\n      basicMessage: 'Content Instance Terminated',\n      detailMessage: 'Call to Initialize failed because Terminate was already called.',\n    },\n    '111': {\n      basicMessage: 'General Termination Failure',\n      detailMessage: 'Call to Terminate failed for an unknown reason.',\n    },\n    '112': {\n      basicMessage: 'Termination Before Initialization',\n      detailMessage: 'Call to Terminate failed because it was made before the call to Initialize.',\n    },\n    '113': {\n      basicMessage: 'Termination After Termination',\n      detailMessage: 'Call to Terminate failed because Terminate was already called.',\n    },\n    '122': {\n      basicMessage: 'Retrieve Data Before Initialization',\n      detailMessage: 'Call to GetValue failed because it was made before the call to Initialize.',\n    },\n    '123': {\n      basicMessage: 'Retrieve Data After Termination',\n      detailMessage: 'Call to GetValue failed because it was made after the call to Terminate.',\n    },\n    '132': {\n      basicMessage: 'Store Data Before Initialization',\n      detailMessage: 'Call to SetValue failed because it was made before the call to Initialize.',\n    },\n    '133': {\n      basicMessage: 'Store Data After Termination',\n      detailMessage: 'Call to SetValue failed because it was made after the call to Terminate.',\n    },\n    '142': {\n      basicMessage: 'Commit Before Initialization',\n      detailMessage: 'Call to Commit failed because it was made before the call to Initialize.',\n    },\n    '143': {\n      basicMessage: 'Commit After Termination',\n      detailMessage: 'Call to Commit failed because it was made after the call to Terminate.',\n    },\n    '201': {\n      basicMessage: 'General Argument Error',\n      detailMessage: 'An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.',\n    },\n    '301': {\n      basicMessage: 'General Get Failure',\n      detailMessage: 'Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '351': {\n      basicMessage: 'General Set Failure',\n      detailMessage: 'Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '391': {\n      basicMessage: 'General Commit Failure',\n      detailMessage: 'Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '401': {\n      basicMessage: 'Undefined Data Model Element',\n      detailMessage: 'The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.',\n    },\n    '402': {\n      basicMessage: 'Unimplemented Data Model Element',\n      detailMessage: 'The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.',\n    },\n    '403': {\n      basicMessage: 'Data Model Element Value Not Initialized',\n      detailMessage: 'Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.',\n    },\n    '404': {\n      basicMessage: 'Data Model Element Is Read Only',\n      detailMessage: 'SetValue was called with a data model element that can only be read.',\n    },\n    '405': {\n      basicMessage: 'Data Model Element Is Write Only',\n      detailMessage: 'GetValue was called on a data model element that can only be written to.',\n    },\n    '406': {\n      basicMessage: 'Data Model Element Type Mismatch',\n      detailMessage: 'SetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Data Model Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\n\nexport default APIConstants;\n","// @flow\nconst global = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12 = {\n  ...global, ...{\n    RETRIEVE_BEFORE_INIT: 301,\n    STORE_BEFORE_INIT: 301,\n    COMMIT_BEFORE_INIT: 301,\n    ARGUMENT_ERROR: 201,\n    CHILDREN_ERROR: 202,\n    COUNT_ERROR: 203,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 401,\n    VALUE_NOT_INITIALIZED: 301,\n    INVALID_SET_VALUE: 402,\n    READ_ONLY_ELEMENT: 403,\n    WRITE_ONLY_ELEMENT: 404,\n    TYPE_MISMATCH: 405,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst scorm2004 = {\n  ...global, ...{\n    INITIALIZATION_FAILED: 102,\n    INITIALIZED: 103,\n    TERMINATED: 104,\n    TERMINATION_FAILURE: 111,\n    TERMINATION_BEFORE_INIT: 112,\n    MULTIPLE_TERMINATIONS: 113,\n    RETRIEVE_BEFORE_INIT: 122,\n    RETRIEVE_AFTER_TERM: 123,\n    STORE_BEFORE_INIT: 132,\n    STORE_AFTER_TERM: 133,\n    COMMIT_BEFORE_INIT: 142,\n    COMMIT_AFTER_TERM: 143,\n    ARGUMENT_ERROR: 201,\n    GENERAL_GET_FAILURE: 301,\n    GENERAL_SET_FAILURE: 351,\n    GENERAL_COMMIT_FAILURE: 391,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 402,\n    VALUE_NOT_INITIALIZED: 403,\n    READ_ONLY_ELEMENT: 404,\n    WRITE_ONLY_ELEMENT: 405,\n    TYPE_MISMATCH: 406,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst ErrorCodes = {\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default ErrorCodes;\n","// @flow\n\nconst scorm12 = {\n  CMIString256: '^.{0,255}$',\n  CMIString4096: '^.{0,4096}$',\n  CMITime: '^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$', // eslint-disable-line\n  CMITimespan: '^([0-9]{2,}):([0-9]{2}):([0-9]{2})(\\.[0-9]{1,2})?$', // eslint-disable-line\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{0,3})(\\.[0-9]*)?$', // eslint-disable-line\n  CMIIdentifier: '^[\\\\u0021-\\\\u007E\\\\s]{0,255}$',\n  CMIFeedback: '^.{0,255}$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMIStatus: '^(passed|completed|failed|incomplete|browsed)$',\n  CMIStatus2: '^(passed|completed|failed|incomplete|browsed|not attempted)$',\n  CMIExit: '^(time-out|suspend|logout|)$',\n  CMIType: '^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$',\n  CMIResult: '^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$', // eslint-disable-line\n  NAVEvent: '^(previous|continue)$',\n\n  // Data ranges\n  score_range: '0#100',\n  audio_range: '-1#100',\n  speed_range: '-100#100',\n  weighting_range: '-100#100',\n  text_range: '-1#1',\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    CMIIdentifier: '^\\\\w{1,255}$',\n  },\n};\n\nconst scorm2004 = {\n  CMIString200: '^[\\\\u0000-\\\\uFFFF]{0,200}$',\n  CMIString250: '^[\\\\u0000-\\\\uFFFF]{0,250}$',\n  CMIString1000: '^[\\\\u0000-\\\\uFFFF]{0,1000}$',\n  CMIString4000: '^[\\\\u0000-\\\\uFFFF]{0,4000}$',\n  CMIString64000: '^[\\\\u0000-\\\\uFFFF]{0,64000}$',\n  CMILang: '^([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?$|^$', // eslint-disable-line\n  CMILangString250: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,250}$)?$', // eslint-disable-line\n  CMILangcr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\}))(.*?)$', // eslint-disable-line\n  CMILangString250cr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\})?(.{0,250})?)?$', // eslint-disable-line\n  CMILangString4000: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,4000}$)?$', // eslint-disable-line\n  CMITime: '^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$',\n  CMITimespan: '^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$',\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$',\n  CMIIdentifier: '^\\\\S{1,250}[a-zA-Z0-9]$',\n  CMIShortIdentifier: '^[\\\\w\\\\.\\\\-\\\\_]{1,250}$', // eslint-disable-line\n  CMILongIdentifier: '^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$', // need to re-examine this\n  CMIFeedback: '^.*$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n  CMIIndexStore: '.N(\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMICStatus: '^(completed|incomplete|not attempted|unknown)$',\n  CMISStatus: '^(passed|failed|unknown)$',\n  CMIExit: '^(time-out|suspend|logout|normal)$',\n  CMIType: '^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$',\n  CMIResult: '^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$',\n  NAVEvent: '^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|\\{target=\\\\S{0,200}[a-zA-Z0-9]\\}choice|jump)$', // eslint-disable-line\n  NAVBoolean: '^(unknown|true|false$)',\n  NAVTarget: '^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$',\n\n  // Data ranges\n  scaled_range: '-1#1',\n  audio_range: '0#*',\n  speed_range: '0#*',\n  text_range: '-1#1',\n  progress_range: '0#1',\n};\n\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default Regex;\n","// @flow\n\nimport APIConstants from './constants/api_constants';\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError extends Error {\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(errorCode: number, errorMessage: String, detailedMessage: String) {\n    super(errorMessage);\n    this.#errorCode = errorCode;\n    this.#errorMessage = errorMessage;\n    this.#detailedMessage = detailedMessage;\n  }\n\n  #errorCode;\n  #errorMessage;\n  #detailedMessage;\n\n  /**\n   * Getter for #errorCode\n   * @return {number}\n   */\n  get errorCode() {\n    return this.#errorCode;\n  }\n\n  /**\n   * Getter for #errorMessage\n   * @return {string}\n   */\n  get errorMessage() {\n    return this.#errorMessage;\n  }\n\n  /**\n   * Getter for #detailedMessage\n   * @return {string}\n   */\n  get detailedMessage() {\n    return this.#detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(errorCode, scorm12_errors[String(errorCode)].basicMessage, scorm12_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm12_errors['101'].basicMessage, scorm12_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(errorCode, aicc_errors[String(errorCode)].basicMessage, aicc_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, aicc_errors['101'].basicMessage, aicc_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(errorCode, scorm2004_errors[String(errorCode)].basicMessage, scorm2004_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm2004_errors['101'].basicMessage, scorm2004_errors['101'].detailMessage);\n    }\n  }\n}\n","// @flow\nexport const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\nconst designations = [\n  ['D', SECONDS_PER_DAY],\n  ['H', SECONDS_PER_HOUR],\n  ['M', SECONDS_PER_MINUTE],\n  ['S', SECONDS_PER_SECOND],\n];\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {Number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return '00:00:00';\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = '';\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n    msStr = '.' + msStr.split('.')[1];\n  }\n\n  return (hours + ':' + minutes + ':' + seconds).replace(/\\b\\d\\b/g,\n      '0$&') + msStr;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {Number} seconds\n * @return {String}\n */\nexport function getSecondsAsISODuration(seconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return 'PT0S';\n  }\n\n  let duration = 'P';\n  let remainder = seconds;\n\n  designations.forEach(([sign, current_seconds]) => {\n    let value = Math.floor(remainder / current_seconds);\n\n    remainder = remainder % current_seconds;\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (sign === 'S' && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if ((duration.indexOf('D') > 0 ||\n          sign === 'H' || sign === 'M' || sign === 'S') &&\n          duration.indexOf('T') === -1) {\n        duration += 'T';\n      }\n      duration += `${value}${sign}`;\n    }\n  });\n\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(timeString: String, timeRegex: RegExp) {\n  if (!timeString || typeof timeString !== 'string' ||\n      !timeString.match(timeRegex)) {\n    return 0;\n  }\n  const parts = timeString.split(':');\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return (hours * 3600) + (minutes * 60) + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(duration: String, durationRegex: RegExp) {\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, months, , days, hours, minutes, seconds] = new RegExp(\n      durationRegex).exec(duration) || [];\n\n  let result = 0.0;\n\n  result += (Number(seconds) || 0.0);\n  result += (Number(minutes) * 60.0 || 0.0);\n  result += (Number(hours) * 3600.0 || 0.0);\n  result += (Number(days) * (60 * 60 * 24.0) || 0.0);\n  result += (Number(years) * (60 * 60 * 24 * 365.0) || 0.0);\n\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n    first: String,\n    second: String,\n    durationRegex: RegExp) {\n  return getSecondsAsISODuration(\n      getDurationAsSeconds(first, durationRegex) +\n      getDurationAsSeconds(second, durationRegex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n    first: String,\n    second: String,\n    timeRegex: RegExp) {\n  return getSecondsAsHHMMSS(\n      getTimeAsSeconds(first, timeRegex) +\n      getTimeAsSeconds(\n          second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data) {\n  const result = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + '.' + p : p);\n        }\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, '');\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data) {\n  'use strict';\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result = {};\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = '';\n      let m = regex.exec(p);\n      while (m) {\n        cur = cur[prop] || (cur[prop] = (m[2] ? [] : {}));\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n      cur[prop] = data[p];\n    }\n  }\n  return result[''] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number) {\n  if (Math.floor(num) === num || String(num).indexOf('.') < 0) return 0;\n  const parts = num.toString().split('.')[1];\n  return parts.length || 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Scorm12API from '../Scorm12API';\n\nwindow.Scorm12API = Scorm12API;\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","_typeof","Object","freeSelf","self","root","Function","objectProto","prototype","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","toNumber","isObject","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","value","type","isObjectLike","isSymbol","call","other","valueOf","replace","isBinary","test","slice","module","exports","CMIArray","ValidationError","ErrorCodes","APIConstants","unflatten","global_constants","scorm12_error_codes","scorm12","_timeout","WeakMap","_error_codes","_settings","BaseAPI","error_codes","settings","_classCallCheck","_classPrivateFieldInitSpec","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","xhr","JSON","parse","responseText","hasOwnProperty","status","SCORM_TRUE","errorCode","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","constructor","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","_classPrivateFieldSet","apiLogLevel","_createClass","key","initialize","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","_classPrivateFieldGet","INITIALIZED","isTerminated","TERMINATED","cmi","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","get","set","_objectSpread","terminate","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","getValue","CMIElement","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","message","GENERAL","setValue","commitCallback","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","commit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","baseLength","messageString","fillChars","length","i","CMIElementBaseLength","j","stringMatches","str","tester","match","_checkObjectHasProperty","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","Error","_CMIElement","_value","_commonSetCMIValue","methodName","scorm2004","structure","split","foundFirstIndex","invalidErrorMessage","concat","invalidErrorCode","UNDEFINED_DATA_MODEL","substr","_isTargetValid","READ_ONLY_ELEMENT","validateCorrectResponse","index","isNaN","item","childArray","newChild","getChildElement","initialized","push","_foundFirstIndex","_commonGetCMIValue","uninitializedErrorMessage","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","on","listenerName","callback","listenerFunctions","listenerSplit","off","_this","_loop","v","removeIndex","findIndex","obj","splice","_ret","clear","_this2","_loop2","filter","_ret2","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","substring","indexOf","errorNumber","success","_calculateTotalTime","loadFromFlattenedJSON","json","_this3","testPattern","a","c","a_pattern","a_match","c_match","a_num","Number","c_num","int_pattern","obj_pattern","keys","map","sort","_ref","_ref2","_ref3","_slicedToArray","b","_ref4","d","forEach","element","loadFromJSON","startingData","currentCMIElement","renderCMIToJSONString","stringify","renderCMIToJSONObject","renderCommitCMI","_terminateCommit","processHttpRequest","url","params","immediate","api","process","genericError","httpReq","XMLHttpRequest","open","header","setRequestHeader","withCredentials","onload","Array","send","join","fetch","method","body","headers","credentials","keepalive","when","ScheduledCommit","default","_API","_cancelled","_timeout2","_callback","API","wrapper","bind","CMI","CMIInteractionsCorrectResponsesObject","CMIInteractionsObject","CMIInteractionsObjectivesObject","CMIObjectivesObject","NAV","Utilities","scorm12_constants","Scorm12API","_BaseAPI","finalSettings","mastery_override","_callSuper","nav","LMSInitialize","lmsInitialize","LMSFinish","lmsFinish","LMSGetValue","lmsGetValue","LMSSetValue","lmsSetValue","LMSCommit","lmsCommit","LMSGetLastError","lmsGetLastError","LMSGetErrorString","lmsGetErrorString","LMSGetDiagnostic","lmsGetDiagnostic","_inherits","event","detail","basicMessage","detailMessage","error_descriptions","replaceWithAnotherScormAPI","newAPI","terminateCommit","cmiExport","core","total_time","getCurrentTotalTime","flattened","flatten","originalStatus","lesson_status","lesson_mode","credit","student_data","mastery_score","score","raw","parseFloat","_this$startingData","_this$startingData$cm","_this$startingData$cm2","Regex","scorm12_regex","checkValidFormat","regexPattern","errorClass","allowEmptyString","formatRegex","RegExp","matches","checkValidRange","rangePattern","ranges","_initialized","_start_time","BaseCMI","_defineProperty","getTime","_children2","_score_range","_invalid_error_code","_invalid_type_code","_invalid_range_code","_decimal_regex","_error_class","_raw","_min","_max","CMIScore","_BaseCMI2","score_children","score_range","invalidTypeCode","invalidRangeCode","decimalRegex","INVALID_SET_VALUE","TYPE_MISMATCH","VALUE_OUT_OF_RANGE","CMIDecimal","_children","toJSON","jsonString","_errorCode","_errorClass","_children3","_BaseCMI3","children","_count","Scorm12ValidationError","Util","throwReadOnlyError","throwWriteOnlyError","WRITE_ONLY_ELEMENT","throwInvalidValueError","check12ValidFormat","check12ValidRange","_version2","_launch_data","_comments","_comments_from_lms","_BaseCMI","cmi_children","CMICore","objectives","CMIObjectives","CMIStudentData","student_preference","CMIStudentPreference","interactions","CMIInteractions","_this$core","_this$objectives","_this$student_data","_this$student_prefere","_this$interactions","_get","_getPrototypeOf","suspend_data","launch_data","comments","comments_from_lms","_version","_this$core2","CMIString4096","start_time","_student_id","_student_name","_lesson_location","_credit","_lesson_status","_entry","_total_time","_lesson_mode","_exit","_session_time","_suspend_data","core_children","_this$score","student_id","student_name","lesson_location","CMIString256","CMIStatus","CMIStatus2","entry","exit","CMIExit","session_time","CMITimespan","sessionTime","startTime","seconds","getSecondsAsHHMMSS","addHHMMSSTimeStrings","_CMIArray","objectives_children","_children4","_mastery_score","_max_time_allowed","_time_limit_action","student_data_children","max_time_allowed","time_limit_action","_children5","_audio","_language","_speed","_text","_BaseCMI4","student_preference_children","_this4","audio","CMISInteger","audio_range","language","speed","speed_range","text","text_range","_CMIArray2","interactions_children","_id","_time","_type","_weighting","_student_response","_result","_latency","_BaseCMI5","_this5","correct_responses","correct_responses_children","_this$objectives2","_this$correct_respons","id","CMIIdentifier","CMITime","CMIType","weighting","weighting_range","student_response","CMIFeedback","CMIResult","latency","_id2","_status","_BaseCMI6","_this6","_id3","_BaseCMI7","_this7","_pattern","_BaseCMI8","_this8","pattern","_event","_BaseCMI9","_this9","NAVEvent","LOG_LEVEL_NONE","comments_children","aicc","student_demographics_children","tries_children","attempt_records_children","paths_children","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_SET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","DEPENDENCY_NOT_ESTABLISHED","MULTIPLE_TERMINATIONS","CMIInteger","CMIIndex","CMIString200","CMIString250","CMIString1000","CMIString4000","CMIString64000","CMILang","CMILangString250","CMILangcr","CMILangString250cr","CMILangString4000","CMIShortIdentifier","CMILongIdentifier","CMIIndexStore","CMICStatus","CMISStatus","NAVBoolean","NAVTarget","scaled_range","progress_range","scorm12_errors","aicc_errors","scorm2004_errors","_errorMessage","_detailedMessage","_Error","errorMessage","detailedMessage","_wrapNativeSuper","_ValidationError2","_assertThisInitialized","AICCValidationError","_ValidationError3","Scorm2004ValidationError","_ValidationError4","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","totalSeconds","hours","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","getSecondsAsISODuration","duration","remainder","sign","current_seconds","getTimeAsSeconds","timeString","timeRegex","parts","getDurationAsSeconds","durationRegex","exec","years","months","days","addTwoDurations","first","second","data","recurse","cur","prop","isArray","l","isEmpty","p","regex","m","num","window"],"sourceRoot":""}