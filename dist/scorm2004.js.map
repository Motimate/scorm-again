{"version":3,"file":"scorm2004.js","mappings":"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","sources":["webpack://scorm-again/./node_modules/lodash.debounce/index.js","webpack://scorm-again/./src/BaseAPI.js","webpack://scorm-again/./src/Scorm2004API.js","webpack://scorm-again/./src/cmi/common.js","webpack://scorm-again/./src/cmi/scorm2004_cmi.js","webpack://scorm-again/./src/constants/api_constants.js","webpack://scorm-again/./src/constants/error_codes.js","webpack://scorm-again/./src/constants/language_constants.js","webpack://scorm-again/./src/constants/regex.js","webpack://scorm-again/./src/constants/response_constants.js","webpack://scorm-again/./src/exceptions.js","webpack://scorm-again/./src/utilities.js","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/compat get default export","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/global","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object","webpack://scorm-again/./src/exports/scorm2004.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","// @flow\nimport {CMIArray} from './cmi/common';\nimport {ValidationError} from './exceptions';\nimport ErrorCodes from './constants/error_codes';\nimport APIConstants from './constants/api_constants';\nimport {unflatten} from './utilities';\nimport debounce from 'lodash.debounce';\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on it's own.\n */\nexport default class BaseAPI {\n  #timeout;\n  #error_codes;\n  #settings = {\n    autocommit: false,\n    autocommitSeconds: 10,\n    asyncCommit: false,\n    sendBeaconCommit: false,\n    lmsCommitUrl: false,\n    dataCommitFormat: 'json', // valid formats are 'json' or 'flattened', 'params'\n    commitRequestDataType: 'application/json;charset=UTF-8',\n    autoProgress: false,\n    logLevel: global_constants.LOG_LEVEL_ERROR,\n    selfReportSessionTime: false,\n    alwaysSendTotalTime: false,\n    strict_errors: true,\n    xhrHeaders: {},\n    xhrWithCredentials: false,\n    responseHandler: function(xhr) {\n      let result;\n      if (typeof xhr !== 'undefined') {\n        result = JSON.parse(xhr.responseText);\n        if (result === null || !{}.hasOwnProperty.call(result, 'result')) {\n          result = {};\n          if (xhr.status === 200) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        }\n      }\n      return result;\n    },\n    requestHandler: function(commitObject) {\n      return commitObject;\n    },\n    onLogMessage: function(messageLevel, logMessage) {\n      switch (messageLevel) {\n        case global_constants.LOG_LEVEL_ERROR:\n          console.error(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_WARNING:\n          console.warn(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_INFO:\n          console.info(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_DEBUG:\n          if (console.debug) {\n            console.debug(logMessage);\n          } else {\n            console.log(logMessage);\n          }\n          break;\n      }\n    },\n  };\n  cmi;\n  startingData: {};\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {object} error_codes\n   * @param {object} settings\n   */\n  constructor(error_codes, settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError('Cannot construct BaseAPI instances directly');\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = 0;\n    this.listenerArray = [];\n\n    this.#timeout = null;\n    this.#error_codes = error_codes;\n\n    this.settings = settings;\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n      callbackName: String,\n      initializeMessage?: String,\n      terminationMessage?: String) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this.#error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this.#error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = 0;\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Getter for #error_codes\n   * @return {object}\n   */\n  get error_codes() {\n    return this.#error_codes;\n  }\n\n  /**\n   * Getter for #settings\n   * @return {object}\n   */\n  get settings() {\n    return this.#settings;\n  }\n\n  /**\n   * Setter for #settings\n   * @param {object} settings\n   */\n  set settings(settings: Object) {\n    this.#settings = {...this.#settings, ...settings};\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(\n      callbackName: String,\n      checkTerminated: boolean) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.TERMINATION_BEFORE_INIT,\n        this.#error_codes.MULTIPLE_TERMINATION)) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result = this.storeData(true);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        typeof result.errorCode !== 'undefined' && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n      callbackName: String,\n      checkTerminated: boolean,\n      CMIElement: String) {\n    let returnValue;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.RETRIEVE_BEFORE_INIT,\n        this.#error_codes.RETRIEVE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(callbackName, CMIElement, ': returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n      callbackName: String,\n      commitCallback: String,\n      checkTerminated: boolean,\n      CMIElement,\n      value) {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.STORE_BEFORE_INIT,\n        this.#error_codes.STORE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === '0') {\n      if (this.settings.autocommit && !this.#timeout) {\n        this.scheduleCommit(this.settings.autocommitSeconds * 1000, commitCallback);\n      }\n    }\n\n    this.apiLog(callbackName, CMIElement,\n        ': ' + value + ': result: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(\n      callbackName: String,\n      checkTerminated: boolean) {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.COMMIT_BEFORE_INIT,\n        this.#error_codes.COMMIT_AFTER_TERM)) {\n      const result = this.storeData(false);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      this.apiLog(callbackName, 'HttpRequest', ' Result: ' + returnValue,\n          global_constants.LOG_LEVEL_DEBUG);\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: String) {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n      checkTerminated: boolean,\n      beforeInitError: number,\n      afterTermError?: number) {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   */\n  apiLog(\n      functionName: String,\n      CMIElement: String,\n      logMessage: String,\n      messageLevel: number) {\n    logMessage = this.formatMessage(functionName, CMIElement, logMessage);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} message\n   * @return {string}\n   */\n  formatMessage(functionName: String, CMIElement: String, message: String) {\n    const baseLength = 20;\n    let messageString = '';\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += ' ';\n    }\n\n    messageString += ': ';\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += ' ';\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: String, tester: String) {\n    return str && tester && str.match(tester);\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {*} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  _checkObjectHasProperty(refObject, attribute: String) {\n    return Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n          Object.getPrototypeOf(refObject), attribute) ||\n      (attribute in refObject);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(_errorNumber, _detail) {\n    throw new Error(\n        'The getLmsErrorMessageDetails method has not been implemented');\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement) {\n    throw new Error('The getCMIValue method has not been implemented');\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement, _value) {\n    throw new Error('The setCMIValue method has not been implemented');\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n      methodName: String, scorm2004: boolean, CMIElement, value) {\n    if (!CMIElement || CMIElement === '') {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      const attribute = structure[i];\n\n      if (i === structure.length - 1) {\n        if (scorm2004 && (attribute.substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          this.throwSCORMError(this.#error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (this.isInitialized() &&\n            this.stringMatches(CMIElement, '\\\\.correct_responses\\\\.\\\\d+')) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === 0) {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[i + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(CMIElement, value,\n                  foundFirstIndex);\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update i value to skip the array position\n            i++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(methodName, null,\n          `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n          global_constants.LOG_LEVEL_WARNING);\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement, _value) {\n    // just a stub method\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {*}\n   * @abstract\n   */\n  getChildElement(_CMIElement, _value, _foundFirstIndex) {\n    throw new Error('The getChildElement method has not been implemented');\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  _commonGetCMIValue(methodName: String, scorm2004: boolean, CMIElement) {\n    if (!CMIElement || CMIElement === '') {\n      return '';\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      attribute = structure[i];\n\n      if (!scorm2004) {\n        if (i === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if ((String(attribute).substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          const target = String(attribute).substr(8, String(attribute).length - 9);\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[i + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(this.#error_codes.VALUE_NOT_INITIALIZED,\n                uninitializedErrorMessage);\n            break;\n          }\n\n          // Have to update i value to skip the array position\n          i++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === '_children') {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === '_count') {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized() {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated() {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog('on', functionName, `Added event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      const removeIndex = this.listenerArray.findIndex((obj) =>\n        obj.functionName === functionName &&\n        obj.CMIElement === CMIElement &&\n        obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog('off', functionName, `Removed event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: String) {\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray = this.listenerArray.filter((obj) =>\n        obj.functionName !== functionName &&\n        obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  processListeners(functionName: String, CMIElement: String, value: any) {\n    this.apiLog(functionName, CMIElement, value);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (CMIElement && listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) ===\n        '*') {\n        CMIElementsMatch = CMIElement.indexOf(listener.CMIElement.substring(0,\n            listener.CMIElement.length - 1)) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message: String) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog('throwSCORMError', null, errorNumber + ': ' + message,\n        global_constants.LOG_LEVEL_ERROR);\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: String) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = 0;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {string}\n   * @abstract\n   */\n  storeData(_calculateTotalTime) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromFlattenedJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(a, c, a_pattern) {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === 'id') {\n            return -1;\n          } else if (a_match[3] === 'type') {\n            if (c_match[3] === 'id') {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function(key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function([a, b], [c, d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : 'cmi';\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + '.' : '') + key;\n        const value = json[key];\n\n        if (value['childArray']) {\n          for (let i = 0; i < value['childArray'].length; i++) {\n            this.loadFromJSON(value['childArray'][i],\n                currentCMIElement + '.' + i);\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString() {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({cmi});\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject() {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {*}\n   * @abstract\n   */\n  renderCommitCMI(_terminateCommit) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {object|Array} params\n   * @param {boolean} immediate\n   * @return {object}\n   */\n  processHttpRequest(url: String, params, immediate = false) {\n    const api = this;\n    const process = function(url, params, settings, error_codes) {\n      const genericError = {\n        'result': global_constants.SCORM_FALSE,\n        'errorCode': error_codes.GENERAL,\n      };\n\n      let result;\n      if (!settings.sendBeaconCommit) {\n        const httpReq = new XMLHttpRequest();\n        httpReq.open('POST', url, settings.asyncCommit);\n\n        if (Object.keys(settings.xhrHeaders).length) {\n          Object.keys(settings.xhrHeaders).forEach((header) => {\n            httpReq.setRequestHeader(header, settings.xhrHeaders[header]);\n          });\n        }\n\n        httpReq.withCredentials = settings.xhrWithCredentials;\n\n        if (settings.asyncCommit) {\n          httpReq.onload = function(e) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          };\n        }\n        try {\n          params = settings.requestHandler(params);\n          if (params instanceof Array) {\n            httpReq.setRequestHeader('Content-Type',\n                'application/x-www-form-urlencoded');\n            httpReq.send(params.join('&'));\n          } else {\n            httpReq.setRequestHeader('Content-Type',\n                settings.commitRequestDataType);\n            httpReq.send(JSON.stringify(params));\n          }\n\n          if (!settings.asyncCommit) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          } else {\n            result = {};\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n            api.processListeners('CommitSuccess');\n            return result;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      } else {\n        try {\n          params = settings.requestHandler(params);\n          fetch(url, {\n            method: 'POST',\n            body: params instanceof Array ? params.join('&') : JSON.stringify(params),\n            headers: {\n              ...settings.xhrHeaders,\n              'Content-Type': settings.commitRequestDataType,\n            },\n            credentials: settings.xhrWithCredentials ? 'include' : undefined,\n            keepalive: true,\n          });\n          result = {};\n          result.result = global_constants.SCORM_TRUE;\n          result.errorCode = 0;\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      }\n\n      if (typeof result === 'undefined') {\n        api.processListeners('CommitError');\n        return genericError;\n      }\n\n      if (result.result === true ||\n        result.result === global_constants.SCORM_TRUE) {\n        api.processListeners('CommitSuccess');\n      } else {\n        api.processListeners('CommitError');\n      }\n\n      return result;\n    };\n\n    if (typeof debounce !== 'undefined') {\n      const debounced = debounce(process, 500);\n      debounced(url, params, this.settings, this.error_codes);\n\n      // if we're terminating, go ahead and commit immediately\n      if (immediate) {\n        debounced.flush();\n      }\n\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return process(url, params, this.settings, this.error_codes);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this.#timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog('scheduleCommit', '', 'scheduled',\n        global_constants.LOG_LEVEL_DEBUG);\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this.#timeout) {\n      this.#timeout.cancel();\n      this.#timeout = null;\n      this.apiLog('clearScheduledCommit', '', 'cleared',\n          global_constants.LOG_LEVEL_DEBUG);\n    }\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  #API;\n  #cancelled = false;\n  #timeout;\n  #callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this.#API = API;\n    this.#timeout = setTimeout(this.wrapper.bind(this), when);\n    this.#callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this.#cancelled = true;\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this.#cancelled) {\n      this.#API.commit(this.#callback);\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  ADL,\n  CMI,\n  CMICommentsObject,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject,\n} from './cmi/scorm2004_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\nimport Responses from './constants/response_constants';\nimport ValidLanguages from './constants/language_constants';\nimport Regex from './constants/regex';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst global_constants = APIConstants.global;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst correct_responses = Responses.correct;\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * API class for SCORM 2004\n */\nexport default class Scorm2004API extends BaseAPI {\n  #version: '1.0';\n\n  /**\n   * Constructor for SCORM 2004 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm2004_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.adl = new ADL();\n\n    // Rename functions to match 2004 Spec and expose to modules\n    this.Initialize = this.lmsInitialize;\n    this.Terminate = this.lmsTerminate;\n    this.GetValue = this.lmsGetValue;\n    this.SetValue = this.lmsSetValue;\n    this.Commit = this.lmsCommit;\n    this.GetLastError = this.lmsGetLastError;\n    this.GetErrorString = this.lmsGetErrorString;\n    this.GetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * Getter for #version\n   * @return {string}\n   */\n  get version() {\n    return this.#version;\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('Initialize');\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsTerminate() {\n    const result = this.terminate('Terminate', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.adl.nav.request !== '_none_') {\n        switch (this.adl.nav.request) {\n          case 'continue':\n            this.processListeners('SequenceNext');\n            break;\n          case 'previous':\n            this.processListeners('SequencePrevious');\n            break;\n          case 'choice':\n            this.processListeners('SequenceChoice');\n            break;\n          case 'exit':\n            this.processListeners('SequenceExit');\n            break;\n          case 'exitAll':\n            this.processListeners('SequenceExitAll');\n            break;\n          case 'abandon':\n            this.processListeners('SequenceAbandon');\n            break;\n          case 'abandonAll':\n            this.processListeners('SequenceAbandonAll');\n            break;\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('SetValue', 'Commit', true, CMIElement, value);\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('Commit');\n  }\n\n  /**\n   * Returns last error code\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('GetLastError');\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('GetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('GetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('SetValue', true, CMIElement, value);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {any}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      const parts = CMIElement.split('.');\n      const index = Number(parts[2]);\n      const interaction = this.cmi.interactions.childArray[index];\n      if (this.isInitialized()) {\n        if (!interaction.type) {\n          this.throwSCORMError(\n              scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n        } else {\n          this.checkDuplicateChoiceResponse(interaction, value);\n\n          const response_type = correct_responses[interaction.type];\n          if (response_type) {\n            this.checkValidResponseType(response_type, value, interaction.type);\n          } else {\n            this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n                'Incorrect Response Type: ' + interaction.type);\n          }\n        }\n      }\n      if (this.lastErrorCode === 0) {\n        newChild = new CMIInteractionsCorrectResponsesObject();\n      }\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_learner\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_lms\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject(true);\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Checks for valid response types\n   * @param {object} response_type\n   * @param {any} value\n   * @param {string} interaction_type\n   */\n  checkValidResponseType(response_type, value, interaction_type) {\n    let nodes = [];\n    if (response_type?.delimiter) {\n      nodes = String(value).split(response_type.delimiter);\n    } else {\n      nodes[0] = value;\n    }\n\n    if (nodes.length > 0 && nodes.length <= response_type.max) {\n      this.checkCorrectResponseValue(interaction_type, nodes, value);\n    } else if (nodes.length > response_type.max) {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Pattern Too Long');\n    }\n  }\n\n  /**\n   * Checks for duplicate 'choice' responses.\n   * @param {CMIInteractionsObject} interaction\n   * @param {any} value\n   */\n  checkDuplicateChoiceResponse(interaction, value) {\n    const interaction_count = interaction.correct_responses._count;\n    if (interaction.type === 'choice') {\n      for (let i = 0; i < interaction_count && this.lastErrorCode ===\n      0; i++) {\n        const response = interaction.correct_responses.childArray[i];\n        if (response.pattern === value) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate correct response.\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  validateCorrectResponse(CMIElement, value) {\n    const parts = CMIElement.split('.');\n    const index = Number(parts[2]);\n    const pattern_index = Number(parts[4]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    const interaction_count = interaction.correct_responses._count;\n    this.checkDuplicateChoiceResponse(interaction, value);\n\n    const response_type = correct_responses[interaction.type];\n    if (typeof response_type.limit === 'undefined' || interaction_count <=\n        response_type.limit) {\n      this.checkValidResponseType(response_type, value, interaction.type);\n\n      if (this.lastErrorCode === 0 &&\n          (!response_type.duplicate ||\n              !this.checkDuplicatedPattern(interaction.correct_responses,\n                  pattern_index, value)) ||\n          (this.lastErrorCode === 0 && value === '')) {\n        // do nothing, we want the inverse\n      } else {\n        if (this.lastErrorCode === 0) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n              'Data Model Element Pattern Already Exists');\n        }\n      }\n    } else {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Collection Limit Reached');\n    }\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {(string|number)} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = '';\n    let detailMessage = '';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm2004_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm2004_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm2004_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Check to see if a correct_response value has been duplicated\n   * @param {CMIArray} correct_response\n   * @param {number} current_index\n   * @param {*} value\n   * @return {boolean}\n   */\n  checkDuplicatedPattern = (correct_response, current_index, value) => {\n    let found = false;\n    const count = correct_response._count;\n    for (let i = 0; i < count && !found; i++) {\n      if (i !== current_index && correct_response.childArray[i] === value) {\n        found = true;\n      }\n    }\n    return found;\n  };\n\n  /**\n   * Checks for a valid correct_response value\n   * @param {string} interaction_type\n   * @param {Array} nodes\n   * @param {*} value\n   */\n  checkCorrectResponseValue(interaction_type, nodes, value) {\n    const response = correct_responses[interaction_type];\n    const formatRegex = new RegExp(response.format);\n    for (let i = 0; i < nodes.length && this.lastErrorCode === 0; i++) {\n      if (interaction_type.match(\n          '^(fill-in|long-fill-in|matching|performance|sequencing)$')) {\n        nodes[i] = this.removeCorrectResponsePrefixes(nodes[i]);\n      }\n\n      if (response?.delimiter2) {\n        const values = nodes[i].split(response.delimiter2);\n        if (values.length === 2) {\n          const matches = values[0].match(formatRegex);\n          if (!matches) {\n            this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n          } else {\n            if (!values[1].match(new RegExp(response.format2))) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n        } else {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        }\n      } else {\n        const matches = nodes[i].match(formatRegex);\n        if ((!matches && value !== '') ||\n            (!matches && interaction_type === 'true-false')) {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        } else {\n          if (interaction_type === 'numeric' && nodes.length > 1) {\n            if (Number(nodes[0]) > Number(nodes[1])) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          } else {\n            if (nodes[i] !== '' && response.unique) {\n              for (let j = 0; j < i && this.lastErrorCode === 0; j++) {\n                if (nodes[i] === nodes[j]) {\n                  this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove prefixes from correct_response\n   * @param {string} node\n   * @return {*}\n   */\n  removeCorrectResponsePrefixes(node) {\n    let seenOrder = false;\n    let seenCase = false;\n    let seenLang = false;\n\n    const prefixRegex = new RegExp(\n        '^({(lang|case_matters|order_matters)=([^}]+)})');\n    let matches = node.match(prefixRegex);\n    let langMatches = null;\n    while (matches) {\n      switch (matches[2]) {\n        case 'lang':\n          langMatches = node.match(scorm2004_regex.CMILangcr);\n          if (langMatches) {\n            const lang = langMatches[3];\n            if (lang !== undefined && lang.length > 0) {\n              if (ValidLanguages[lang.toLowerCase()] === undefined) {\n                this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n              }\n            }\n          }\n          seenLang = true;\n          break;\n        case 'case_matters':\n          if (!seenLang && !seenOrder && !seenCase) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenCase = true;\n          break;\n        case 'order_matters':\n          if (!seenCase && !seenLang && !seenOrder) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenOrder = true;\n          break;\n        default:\n          break;\n      }\n      node = node.substr(matches[1].length);\n      matches = node.match(prefixRegex);\n    }\n\n    return node;\n  }\n\n  /**\n   * Replace the whole API with another\n   * @param {Scorm2004API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.adl = newAPI.adl;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      if (this.cmi.mode === 'normal') {\n        if (this.cmi.credit === 'credit') {\n          if (this.cmi.completion_threshold && this.cmi.progress_measure) {\n            if (this.cmi.progress_measure >= this.cmi.completion_threshold) {\n              console.debug('Setting Completion Status: Completed');\n              this.cmi.completion_status = 'completed';\n            } else {\n              console.debug('Setting Completion Status: Incomplete');\n              this.cmi.completion_status = 'incomplete';\n            }\n          }\n          if (this.cmi.scaled_passing_score && this.cmi.score.scaled) {\n            if (this.cmi.score.scaled >= this.cmi.scaled_passing_score) {\n              console.debug('Setting Success Status: Passed');\n              this.cmi.success_status = 'passed';\n            } else {\n              console.debug('Setting Success Status: Failed');\n              this.cmi.success_status = 'failed';\n            }\n          }\n        }\n      }\n    }\n\n    let navRequest = false;\n    if (this.adl.nav.request !== (this.startingData?.adl?.nav?.request) &&\n        this.adl.nav.request !== '_none_') {\n      this.adl.nav.request = encodeURIComponent(this.adl.nav.request);\n      navRequest = true;\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' +\n            (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      const result = this.processHttpRequest(this.settings.lmsCommitUrl,\n          commitObject, terminateCommit);\n\n      // check if this is a sequencing call, and then call the necessary JS\n      {\n        if (navRequest && result.navRequest !== undefined &&\n            result.navRequest !== '') {\n          Function(`\"use strict\";(() => { ${result.navRequest} })()`)();\n        }\n      }\n      return result;\n    } else {\n      return global_constants.SCORM_TRUE;\n    }\n  }\n}\n","// @flow\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkValidFormat(\n    value: String,\n    regexPattern: String,\n    errorCode: number,\n    errorClass: function,\n    allowEmptyString?: boolean) {\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === '') {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === '') {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {*} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n    value: any,\n    rangePattern: String,\n    errorCode: number,\n    errorClass: function) {\n  const ranges = rangePattern.split('#');\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if ((ranges[1] === '*') || (value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass.prototype.constructor(errorCode);\n    }\n  } else {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n}\n\n/**\n * Base class for API cmi objects\n */\nexport class BaseCMI {\n  jsonString = false;\n  #initialized = false;\n  #start_time;\n\n  /**\n   * Constructor for BaseCMI, just marks the class as abstract\n   */\n  constructor() {\n    if (new.target === BaseCMI) {\n      throw new TypeError('Cannot construct BaseCMI instances directly');\n    }\n  }\n\n  /**\n   * Getter for #initialized\n   * @return {boolean}\n   */\n  get initialized() {\n    return this.#initialized;\n  }\n\n  /**\n   * Getter for #start_time\n   * @return {Number}\n   */\n  get start_time() {\n    return this.#start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    this.#initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime() {\n    this.#start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  /**\n   * Constructor for *.score\n   * @param {string} score_children\n   * @param {string} score_range\n   * @param {string} max\n   * @param {number} invalidErrorCode\n   * @param {number} invalidTypeCode\n   * @param {number} invalidRangeCode\n   * @param {string} decimalRegex\n   * @param {class} errorClass\n   */\n  constructor(\n      {\n        score_children,\n        score_range,\n        max,\n        invalidErrorCode,\n        invalidTypeCode,\n        invalidRangeCode,\n        decimalRegex,\n        errorClass,\n      }) {\n    super();\n\n    this.#_children = score_children ||\n        scorm12_constants.score_children;\n    this.#_score_range = !score_range ? false : scorm12_regex.score_range;\n    this.#max = (max || max === '') ? max : '100';\n    this.#_invalid_error_code = invalidErrorCode ||\n        scorm12_error_codes.INVALID_SET_VALUE;\n    this.#_invalid_type_code = invalidTypeCode ||\n        scorm12_error_codes.TYPE_MISMATCH;\n    this.#_invalid_range_code = invalidRangeCode ||\n        scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.#_decimal_regex = decimalRegex ||\n        scorm12_regex.CMIDecimal;\n    this.#_error_class = errorClass;\n  }\n\n  #_children;\n  #_score_range;\n  #_invalid_error_code;\n  #_invalid_type_code;\n  #_invalid_range_code;\n  #_decimal_regex;\n  #_error_class;\n  #raw = '';\n  #min = '';\n  #max;\n\n  /**\n   * Getter for _children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throw new this.#_error_class.prototype.constructor(this.#_invalid_error_code);\n  }\n\n  /**\n   * Getter for #raw\n   * @return {string}\n   */\n  get raw() {\n    return this.#raw;\n  }\n\n  /**\n   * Setter for #raw\n   * @param {string} raw\n   */\n  set raw(raw) {\n    if (checkValidFormat(raw, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(raw, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#raw = raw;\n    }\n  }\n\n  /**\n   * Getter for #min\n   * @return {string}\n   */\n  get min() {\n    return this.#min;\n  }\n\n  /**\n   * Setter for #min\n   * @param {string} min\n   */\n  set min(min) {\n    if (checkValidFormat(min, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(min, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#min = min;\n    }\n  }\n\n  /**\n   * Getter for #max\n   * @return {string}\n   */\n  get max() {\n    return this.#max;\n  }\n\n  /**\n   * Setter for #max\n   * @param {string} max\n   */\n  set max(max) {\n    if (checkValidFormat(max, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(max, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {{min: string, max: string, raw: string}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'raw': this.raw,\n      'min': this.min,\n      'max': this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  /**\n   * Constructor cmi *.n arrays\n   * @param {string} children\n   * @param {number} errorCode\n   * @param {class} errorClass\n   */\n  constructor({children, errorCode, errorClass}) {\n    super();\n    this.#_children = children;\n    this.#errorCode = errorCode;\n    this.#errorClass = errorClass;\n    this.childArray = [];\n  }\n\n  #errorCode;\n  #errorClass;\n  #_children;\n\n  /**\n   * Getter for _children\n   * @return {*}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count() {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + ''] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport Regex from '../constants/regex';\nimport ErrorCodes from '../constants/error_codes';\nimport Responses from '../constants/response_constants';\nimport {Scorm2004ValidationError} from '../exceptions';\nimport * as Util from '../utilities';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst learner_responses = Responses.learner;\n\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * Helper method for throwing Read Only error\n */\nfunction throwReadOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nfunction throwWriteOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Type Mismatch error\n */\nfunction throwTypeMismatchError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.TYPE_MISMATCH);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwDependencyNotEstablishedError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwGeneralSetError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nfunction check2004ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm2004_error_codes.TYPE_MISMATCH,\n      Scorm2004ValidationError,\n      allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @return {boolean}\n */\nfunction check2004ValidRange(value: any, rangePattern: String) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm2004ValidationError,\n  );\n}\n\n/**\n * Class representing cmi object for SCORM 2004\n */\nexport class CMI extends BaseCMI {\n  /**\n   * Constructor for the SCORM 2004 cmi object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean) {\n    super();\n\n    this.learner_preference = new CMILearnerPreference();\n    this.score = new Scorm2004CMIScore();\n    this.comments_from_learner = new CMICommentsFromLearner();\n    this.comments_from_lms = new CMICommentsFromLMS();\n    this.interactions = new CMIInteractions();\n    this.objectives = new CMIObjectives();\n\n    if (initialized) this.initialize();\n  }\n\n  #_version = '1.0';\n  #_children = scorm2004_constants.cmi_children;\n  #completion_status = 'unknown';\n  #completion_threshold = '';\n  #credit = 'credit';\n  #entry = '';\n  #exit = '';\n  #launch_data = '';\n  #learner_id = '';\n  #learner_name = '';\n  #location = '';\n  #max_time_allowed = '';\n  #mode = 'normal';\n  #progress_measure = '';\n  #scaled_passing_score = '';\n  #session_time = 'PT0H0M0S';\n  #success_status = 'unknown';\n  #suspend_data = '';\n  #time_limit_action = 'continue,no message';\n  #total_time = '';\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.learner_preference?.initialize();\n    this.score?.initialize();\n    this.comments_from_learner?.initialize();\n    this.comments_from_lms?.initialize();\n    this.interactions?.initialize();\n    this.objectives?.initialize();\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   * @private\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   * @private\n   */\n  set _version(_version) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {number} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n      this.#completion_status = completion_status;\n    }\n  }\n\n  /**\n   * Getter for #completion_threshold\n   * @return {string}\n   */\n  get completion_threshold() {\n    return this.#completion_threshold;\n  }\n\n  /**\n   * Setter for #completion_threshold. Can only be called before  initialization.\n   * @param {string} completion_threshold\n   */\n  set completion_threshold(completion_threshold) {\n    !this.initialized ?\n      this.#completion_threshold = completion_threshold :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Setter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Getter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check2004ValidFormat(exit, scorm2004_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_id\n   * @return {string}\n   */\n  get learner_id() {\n    return this.#learner_id;\n  }\n\n  /**\n   * Setter for #learner_id. Can only be called before  initialization.\n   * @param {string} learner_id\n   */\n  set learner_id(learner_id) {\n    !this.initialized ? this.#learner_id = learner_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_name\n   * @return {string}\n   */\n  get learner_name() {\n    return this.#learner_name;\n  }\n\n  /**\n   * Setter for #learner_name. Can only be called before  initialization.\n   * @param {string} learner_name\n   */\n  set learner_name(learner_name) {\n    !this.initialized ?\n      this.#learner_name = learner_name :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (check2004ValidFormat(location, scorm2004_regex.CMIString1000)) {\n      this.#location = location;\n    }\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n      this.#max_time_allowed = max_time_allowed :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #mode\n   * @return {string}\n   */\n  get mode() {\n    return this.#mode;\n  }\n\n  /**\n   * Setter for #mode. Can only be called before  initialization.\n   * @param {string} mode\n   */\n  set mode(mode) {\n    !this.initialized ? this.#mode = mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(progress_measure, scorm2004_regex.progress_range)) {\n      this.#progress_measure = progress_measure;\n    }\n  }\n\n  /**\n   * Getter for #scaled_passing_score\n   * @return {string}\n   */\n  get scaled_passing_score() {\n    return this.#scaled_passing_score;\n  }\n\n  /**\n   * Setter for #scaled_passing_score. Can only be called before  initialization.\n   * @param {string} scaled_passing_score\n   */\n  set scaled_passing_score(scaled_passing_score) {\n    !this.initialized ?\n      this.#scaled_passing_score = scaled_passing_score :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check2004ValidFormat(session_time, scorm2004_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n      this.#success_status = success_status;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check2004ValidFormat(suspend_data, scorm2004_regex.CMIString64000,\n        true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n      this.#time_limit_action = time_limit_action :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string} ISO8601 Duration\n   */\n  getCurrentTotalTime() {\n    let sessionTime = this.#session_time;\n    const startTime = this.start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsISODuration(seconds / 1000);\n    }\n\n    return Util.addTwoDurations(\n        this.#total_time,\n        sessionTime,\n        scorm2004_regex.CMITimespan,\n    );\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      comments_from_learner: CMICommentsFromLearner,\n   *      comments_from_lms: CMICommentsFromLMS,\n   *      completion_status: string,\n   *      completion_threshold: string,\n   *      credit: string,\n   *      entry: string,\n   *      exit: string,\n   *      interactions: CMIInteractions,\n   *      launch_data: string,\n   *      learner_id: string,\n   *      learner_name: string,\n   *      learner_preference: CMILearnerPreference,\n   *      location: string,\n   *      max_time_allowed: string,\n   *      mode: string,\n   *      objectives: CMIObjectives,\n   *      progress_measure: string,\n   *      scaled_passing_score: string,\n   *      score: Scorm2004CMIScore,\n   *      session_time: string,\n   *      success_status: string,\n   *      suspend_data: string,\n   *      time_limit_action: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comments_from_learner': this.comments_from_learner,\n      'comments_from_lms': this.comments_from_lms,\n      'completion_status': this.completion_status,\n      'completion_threshold': this.completion_threshold,\n      'credit': this.credit,\n      'entry': this.entry,\n      'exit': this.exit,\n      'interactions': this.interactions,\n      'launch_data': this.launch_data,\n      'learner_id': this.learner_id,\n      'learner_name': this.learner_name,\n      'learner_preference': this.learner_preference,\n      'location': this.location,\n      'max_time_allowed': this.max_time_allowed,\n      'mode': this.mode,\n      'objectives': this.objectives,\n      'progress_measure': this.progress_measure,\n      'scaled_passing_score': this.scaled_passing_score,\n      'score': this.score,\n      'session_time': this.session_time,\n      'success_status': this.success_status,\n      'suspend_data': this.suspend_data,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.learner_preference object\n */\nclass CMILearnerPreference extends BaseCMI {\n  #_children = scorm2004_constants.student_preference_children;\n  #audio_level = '1';\n  #language = '';\n  #delivery_speed = '1';\n  #audio_captioning = '0';\n\n  /**\n   * Constructor for cmi.learner_preference\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #audio_level\n   * @return {string}\n   */\n  get audio_level() {\n    return this.#audio_level;\n  }\n\n  /**\n   * Setter for #audio_level\n   * @param {string} audio_level\n   */\n  set audio_level(audio_level) {\n    if (check2004ValidFormat(audio_level, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(audio_level, scorm2004_regex.audio_range)) {\n      this.#audio_level = audio_level;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check2004ValidFormat(language, scorm2004_regex.CMILang)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #delivery_speed\n   * @return {string}\n   */\n  get delivery_speed() {\n    return this.#delivery_speed;\n  }\n\n  /**\n   * Setter for #delivery_speed\n   * @param {string} delivery_speed\n   */\n  set delivery_speed(delivery_speed) {\n    if (check2004ValidFormat(delivery_speed, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(delivery_speed, scorm2004_regex.speed_range)) {\n      this.#delivery_speed = delivery_speed;\n    }\n  }\n\n  /**\n   * Getter for #audio_captioning\n   * @return {string}\n   */\n  get audio_captioning() {\n    return this.#audio_captioning;\n  }\n\n  /**\n   * Setter for #audio_captioning\n   * @param {string} audio_captioning\n   */\n  set audio_captioning(audio_captioning) {\n    if (check2004ValidFormat(audio_captioning, scorm2004_regex.CMISInteger) &&\n      check2004ValidRange(audio_captioning, scorm2004_regex.text_range)) {\n      this.#audio_captioning = audio_captioning;\n    }\n  }\n\n  /**\n   * toJSON for cmi.learner_preference\n   *\n   * @return {\n   *    {\n   *      audio_level: string,\n   *      language: string,\n   *      delivery_speed: string,\n   *      audio_captioning: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio_level': this.audio_level,\n      'language': this.language,\n      'delivery_speed': this.delivery_speed,\n      'audio_captioning': this.audio_captioning,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions object\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.interactions_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.objectives object\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.objectives_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_lms object\n */\nclass CMICommentsFromLMS extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_lms Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner object\n */\nclass CMICommentsFromLearner extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_learner Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.interaction.n object\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  #id = '';\n  #type = '';\n  #timestamp = '';\n  #weighting = '';\n  #learner_response = '';\n  #result = '';\n  #latency = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.interaction.n\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #type\n   * @return {string}\n   */\n  get type() {\n    return this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(type, scorm2004_regex.CMIType)) {\n        this.#type = type;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * Getter for #weighting\n   * @return {string}\n   */\n  get weighting() {\n    return this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(weighting, scorm2004_regex.CMIDecimal)) {\n        this.#weighting = weighting;\n      }\n    }\n  }\n\n  /**\n   * Getter for #learner_response\n   * @return {string}\n   */\n  get learner_response() {\n    return this.#learner_response;\n  }\n\n  /**\n   * Setter for #learner_response. Does type validation to make sure response\n   * matches SCORM 2004's spec\n   * @param {string} learner_response\n   */\n  set learner_response(learner_response) {\n    if (this.initialized && (this.#type === '' || this.#id === '')) {\n      throwDependencyNotEstablishedError();\n    } else {\n      let nodes = [];\n      const response_type = learner_responses[this.type];\n      if (response_type) {\n        if (response_type?.delimiter) {\n          nodes = learner_response.split(response_type.delimiter);\n        } else {\n          nodes[0] = learner_response;\n        }\n\n        if ((nodes.length > 0) && (nodes.length <= response_type.max)) {\n          const formatRegex = new RegExp(response_type.format);\n          for (let i = 0; i < nodes.length; i++) {\n            if (response_type?.delimiter2) {\n              const values = nodes[i].split(response_type.delimiter2);\n              if (values.length === 2) {\n                if (!values[0].match(formatRegex)) {\n                  throwTypeMismatchError();\n                } else {\n                  if (!values[1].match(new RegExp(response_type.format2))) {\n                    throwTypeMismatchError();\n                  }\n                }\n              } else {\n                throwTypeMismatchError();\n              }\n            } else {\n              if (!nodes[i].match(formatRegex)) {\n                throwTypeMismatchError();\n              } else {\n                if (nodes[i] !== '' && response_type.unique) {\n                  for (let j = 0; j < i; j++) {\n                    if (nodes[i] === nodes[j]) {\n                      throwTypeMismatchError();\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          throwGeneralSetError();\n        }\n\n        this.#learner_response = learner_response;\n      } else {\n        throwTypeMismatchError();\n      }\n    }\n  }\n\n  /**\n   * Getter for #result\n   * @return {string}\n   */\n  get result() {\n    return this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check2004ValidFormat(result, scorm2004_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency\n   * @return {string}\n   */\n  get latency() {\n    return this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(latency, scorm2004_regex.CMITimespan)) {\n        this.#latency = latency;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      type: string,\n   *      objectives: CMIArray,\n   *      timestamp: string,\n   *      correct_responses: CMIArray,\n   *      weighting: string,\n   *      learner_response: string,\n   *      result: string,\n   *      latency: string,\n   *      description: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'type': this.type,\n      'objectives': this.objectives,\n      'timestamp': this.timestamp,\n      'weighting': this.weighting,\n      'learner_response': this.learner_response,\n      'result': this.result,\n      'latency': this.latency,\n      'description': this.description,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.objectives.n object\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  #id = '';\n  #success_status = 'unknown';\n  #completion_status = 'unknown';\n  #progress_measure = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new Scorm2004CMIScore();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n        this.#success_status = success_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n        this.#completion_status = completion_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n        check2004ValidRange(progress_measure,\n            scorm2004_regex.progress_range)) {\n        this.#progress_measure = progress_measure;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      success_status: string,\n   *      completion_status: string,\n   *      progress_measure: string,\n   *      description: string,\n   *      score: Scorm2004CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'success_status': this.success_status,\n      'completion_status': this.completion_status,\n      'progress_measure': this.progress_measure,\n      'description': this.description,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi *.score object\n */\nclass Scorm2004CMIScore extends CMIScore {\n  #scaled = '';\n\n  /**\n   * Constructor for cmi *.score\n   */\n  constructor() {\n    super(\n        {\n          score_children: scorm2004_constants.score_children,\n          max: '',\n          invalidErrorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n          invalidTypeCode: scorm2004_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n          decimalRegex: scorm2004_regex.CMIDecimal,\n          errorClass: Scorm2004ValidationError,\n        });\n  }\n\n  /**\n   * Getter for #scaled\n   * @return {string}\n   */\n  get scaled() {\n    return this.#scaled;\n  }\n\n  /**\n   * Setter for #scaled\n   * @param {string} scaled\n   */\n  set scaled(scaled) {\n    if (check2004ValidFormat(scaled, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(scaled, scorm2004_regex.scaled_range)) {\n      this.#scaled = scaled;\n    }\n  }\n\n  /**\n   * toJSON for cmi *.score\n   *\n   * @return {\n   *    {\n   *      scaled: string,\n   *      raw: string,\n   *      min: string,\n   *      max: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'scaled': this.scaled,\n      'raw': super.raw,\n      'min': super.min,\n      'max': super.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner.n and cmi.comments_from_lms.n object\n */\nexport class CMICommentsObject extends BaseCMI {\n  #comment = '';\n  #location = '';\n  #timestamp = '';\n  #readOnlyAfterInit;\n\n  /**\n   * Constructor for cmi.comments_from_learner.n and cmi.comments_from_lms.n\n   * @param {boolean} readOnlyAfterInit\n   */\n  constructor(readOnlyAfterInit = false) {\n    super();\n    this.#comment = '';\n    this.#location = '';\n    this.#timestamp = '';\n    this.#readOnlyAfterInit = readOnlyAfterInit;\n  }\n\n  /**\n   * Getter for #comment\n   * @return {string}\n   */\n  get comment() {\n    return this.#comment;\n  }\n\n  /**\n   * Setter for #comment\n   * @param {string} comment\n   */\n  set comment(comment) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(comment, scorm2004_regex.CMILangString4000,\n          true)) {\n        this.#comment = comment;\n      }\n    }\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(location, scorm2004_regex.CMIString250)) {\n        this.#location = location;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.comments_from_learner.n object\n   * @return {\n   *    {\n   *      comment: string,\n   *      location: string,\n   *      timestamp: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comment': this.comment,\n      'location': this.location,\n      'timestamp': this.timestamp,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.objectives.n object\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  #id = '';\n\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.correct_responses.n object\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  #pattern = '';\n\n  /**\n   * Constructor for cmi.interactions.n.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check2004ValidFormat(pattern, scorm2004_regex.CMIFeedback)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON cmi.interactions.n.correct_responses.n object\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl object\n */\nexport class ADL extends BaseCMI {\n  /**\n   * Constructor for adl\n   */\n  constructor() {\n    super();\n\n    this.nav = new ADLNav();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.nav?.initialize();\n  }\n\n  /**\n   * toJSON for adl\n   * @return {\n   *    {\n   *      nav: {\n   *        request: string\n   *      }\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'nav': this.nav,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav object\n */\nclass ADLNav extends BaseCMI {\n  #request = '_none_';\n\n  /**\n   * Constructor for adl.nav\n   */\n  constructor() {\n    super();\n\n    this.request_valid = new ADLNavRequestValid();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.request_valid?.initialize();\n  }\n\n  /**\n   * Getter for #request\n   * @return {string}\n   */\n  get request() {\n    return this.#request;\n  }\n\n  /**\n   * Setter for #request\n   * @param {string} request\n   */\n  set request(request) {\n    if (check2004ValidFormat(request, scorm2004_regex.NAVEvent)) {\n      this.#request = request;\n    }\n  }\n\n  /**\n   * toJSON for adl.nav\n   *\n   * @return {\n   *    {\n   *      request: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'request': this.request,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav.request_valid object\n */\nclass ADLNavRequestValid extends BaseCMI {\n  #continue = 'unknown';\n  #previous = 'unknown';\n  choice = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n  jump = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n\n  /**\n   * Constructor for adl.nav.request_valid\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #continue\n   * @return {string}\n   */\n  get continue() {\n    return this.#continue;\n  }\n\n  /**\n   * Setter for #continue. Just throws an error.\n   * @param {*} _\n   */\n  set continue(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #previous\n   * @return {string}\n   */\n  get previous() {\n    return this.#previous;\n  }\n\n  /**\n   * Setter for #previous. Just throws an error.\n   * @param {*} _\n   */\n  set previous(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for adl.nav.request_valid\n   *\n   * @return {\n   *    {\n   *      previous: string,\n   *      continue: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'previous': this.previous,\n      'continue': this.continue,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\n\nconst global = {\n  SCORM_TRUE: 'true',\n  SCORM_FALSE: 'false',\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12 = {\n  // Children lists\n  cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions',\n  core_children: 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time',\n  score_children: 'raw,min,max',\n  comments_children: 'content,location,time',\n  objectives_children: 'id,score,status',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio,language,speed,text',\n  interactions_children: 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency',\n\n  error_descriptions: {\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use LMSGetDiagnostic for more information',\n    },\n    '201': {\n      basicMessage: 'Invalid argument error',\n      detailMessage: 'Indicates that an argument represents an invalid data model element or is otherwise incorrect.',\n    },\n    '202': {\n      basicMessage: 'Element cannot have children',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    '203': {\n      basicMessage: 'Element not an array - cannot have count',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    '301': {\n      basicMessage: 'Not initialized',\n      detailMessage: 'Indicates that an API call was made before the call to lmsInitialize.',\n    },\n    '401': {\n      basicMessage: 'Not implemented error',\n      detailMessage: 'The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.',\n    },\n    '402': {\n      basicMessage: 'Invalid set value, element is a keyword',\n      detailMessage: 'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    '403': {\n      basicMessage: 'Element is read only',\n      detailMessage: 'LMSSetValue was called with a data model element that can only be read.',\n    },\n    '404': {\n      basicMessage: 'Element is write only',\n      detailMessage: 'LMSGetValue was called on a data model element that can only be written to.',\n    },\n    '405': {\n      basicMessage: 'Incorrect Data Type',\n      detailMessage: 'LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation',\n    student_preference_children: 'audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows',\n    student_data_children: 'attempt_number,tries,mastery_score,max_time_allowed,time_limit_action',\n    student_demographics_children: 'city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience',\n    tries_children: 'time,status,score',\n    attempt_records_children: 'score,lesson_status',\n    paths_children: 'location_id,date,time,status,why_left,time_in_element',\n  },\n};\n\nconst scorm2004 = {\n  // Children lists\n  cmi_children: '_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time',\n  comments_children: 'comment,timestamp,location',\n  score_children: 'max,raw,scaled,min',\n  objectives_children: 'progress_measure,completion_status,success_status,description,score,id',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio_level,audio_captioning,delivery_speed,language',\n  interactions_children: 'id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description',\n\n  error_descriptions: {\n    '0': {\n      basicMessage: 'No Error',\n      detailMessage: 'No error occurred, the previous API call was successful.',\n    },\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use GetDiagnostic for more information.',\n    },\n    '102': {\n      basicMessage: 'General Initialization Failure',\n      detailMessage: 'Call to Initialize failed for an unknown reason.',\n    },\n    '103': {\n      basicMessage: 'Already Initialized',\n      detailMessage: 'Call to Initialize failed because Initialize was already called.',\n    },\n    '104': {\n      basicMessage: 'Content Instance Terminated',\n      detailMessage: 'Call to Initialize failed because Terminate was already called.',\n    },\n    '111': {\n      basicMessage: 'General Termination Failure',\n      detailMessage: 'Call to Terminate failed for an unknown reason.',\n    },\n    '112': {\n      basicMessage: 'Termination Before Initialization',\n      detailMessage: 'Call to Terminate failed because it was made before the call to Initialize.',\n    },\n    '113': {\n      basicMessage: 'Termination After Termination',\n      detailMessage: 'Call to Terminate failed because Terminate was already called.',\n    },\n    '122': {\n      basicMessage: 'Retrieve Data Before Initialization',\n      detailMessage: 'Call to GetValue failed because it was made before the call to Initialize.',\n    },\n    '123': {\n      basicMessage: 'Retrieve Data After Termination',\n      detailMessage: 'Call to GetValue failed because it was made after the call to Terminate.',\n    },\n    '132': {\n      basicMessage: 'Store Data Before Initialization',\n      detailMessage: 'Call to SetValue failed because it was made before the call to Initialize.',\n    },\n    '133': {\n      basicMessage: 'Store Data After Termination',\n      detailMessage: 'Call to SetValue failed because it was made after the call to Terminate.',\n    },\n    '142': {\n      basicMessage: 'Commit Before Initialization',\n      detailMessage: 'Call to Commit failed because it was made before the call to Initialize.',\n    },\n    '143': {\n      basicMessage: 'Commit After Termination',\n      detailMessage: 'Call to Commit failed because it was made after the call to Terminate.',\n    },\n    '201': {\n      basicMessage: 'General Argument Error',\n      detailMessage: 'An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.',\n    },\n    '301': {\n      basicMessage: 'General Get Failure',\n      detailMessage: 'Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '351': {\n      basicMessage: 'General Set Failure',\n      detailMessage: 'Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '391': {\n      basicMessage: 'General Commit Failure',\n      detailMessage: 'Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '401': {\n      basicMessage: 'Undefined Data Model Element',\n      detailMessage: 'The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.',\n    },\n    '402': {\n      basicMessage: 'Unimplemented Data Model Element',\n      detailMessage: 'The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.',\n    },\n    '403': {\n      basicMessage: 'Data Model Element Value Not Initialized',\n      detailMessage: 'Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.',\n    },\n    '404': {\n      basicMessage: 'Data Model Element Is Read Only',\n      detailMessage: 'SetValue was called with a data model element that can only be read.',\n    },\n    '405': {\n      basicMessage: 'Data Model Element Is Write Only',\n      detailMessage: 'GetValue was called on a data model element that can only be written to.',\n    },\n    '406': {\n      basicMessage: 'Data Model Element Type Mismatch',\n      detailMessage: 'SetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Data Model Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\n\nexport default APIConstants;\n","// @flow\nconst global = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12 = {\n  ...global, ...{\n    RETRIEVE_BEFORE_INIT: 301,\n    STORE_BEFORE_INIT: 301,\n    COMMIT_BEFORE_INIT: 301,\n    ARGUMENT_ERROR: 201,\n    CHILDREN_ERROR: 202,\n    COUNT_ERROR: 203,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 401,\n    VALUE_NOT_INITIALIZED: 301,\n    INVALID_SET_VALUE: 402,\n    READ_ONLY_ELEMENT: 403,\n    WRITE_ONLY_ELEMENT: 404,\n    TYPE_MISMATCH: 405,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst scorm2004 = {\n  ...global, ...{\n    INITIALIZATION_FAILED: 102,\n    INITIALIZED: 103,\n    TERMINATED: 104,\n    TERMINATION_FAILURE: 111,\n    TERMINATION_BEFORE_INIT: 112,\n    MULTIPLE_TERMINATIONS: 113,\n    RETRIEVE_BEFORE_INIT: 122,\n    RETRIEVE_AFTER_TERM: 123,\n    STORE_BEFORE_INIT: 132,\n    STORE_AFTER_TERM: 133,\n    COMMIT_BEFORE_INIT: 142,\n    COMMIT_AFTER_TERM: 143,\n    ARGUMENT_ERROR: 201,\n    GENERAL_GET_FAILURE: 301,\n    GENERAL_SET_FAILURE: 351,\n    GENERAL_COMMIT_FAILURE: 391,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 402,\n    VALUE_NOT_INITIALIZED: 403,\n    READ_ONLY_ELEMENT: 404,\n    WRITE_ONLY_ELEMENT: 405,\n    TYPE_MISMATCH: 406,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst ErrorCodes = {\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default ErrorCodes;\n","const ValidLanguages = {\n  'aa': 'aa', 'ab': 'ab', 'ae': 'ae', 'af': 'af', 'ak': 'ak', 'am': 'am',\n  'an': 'an', 'ar': 'ar', 'as': 'as', 'av': 'av', 'ay': 'ay', 'az': 'az',\n  'ba': 'ba', 'be': 'be', 'bg': 'bg', 'bh': 'bh', 'bi': 'bi', 'bm': 'bm',\n  'bn': 'bn', 'bo': 'bo', 'br': 'br', 'bs': 'bs', 'ca': 'ca', 'ce': 'ce',\n  'ch': 'ch', 'co': 'co', 'cr': 'cr', 'cs': 'cs', 'cu': 'cu', 'cv': 'cv',\n  'cy': 'cy', 'da': 'da', 'de': 'de', 'dv': 'dv', 'dz': 'dz', 'ee': 'ee',\n  'el': 'el', 'en': 'en', 'eo': 'eo', 'es': 'es', 'et': 'et', 'eu': 'eu',\n  'fa': 'fa', 'ff': 'ff', 'fi': 'fi', 'fj': 'fj', 'fo': 'fo', 'fr': 'fr',\n  'fy': 'fy', 'ga': 'ga', 'gd': 'gd', 'gl': 'gl', 'gn': 'gn', 'gu': 'gu',\n  'gv': 'gv', 'ha': 'ha', 'he': 'he', 'hi': 'hi', 'ho': 'ho', 'hr': 'hr',\n  'ht': 'ht', 'hu': 'hu', 'hy': 'hy', 'hz': 'hz', 'ia': 'ia', 'id': 'id',\n  'ie': 'ie', 'ig': 'ig', 'ii': 'ii', 'ik': 'ik', 'io': 'io', 'is': 'is',\n  'it': 'it', 'iu': 'iu', 'ja': 'ja', 'jv': 'jv', 'ka': 'ka', 'kg': 'kg',\n  'ki': 'ki', 'kj': 'kj', 'kk': 'kk', 'kl': 'kl', 'km': 'km', 'kn': 'kn',\n  'ko': 'ko', 'kr': 'kr', 'ks': 'ks', 'ku': 'ku', 'kv': 'kv', 'kw': 'kw',\n  'ky': 'ky', 'la': 'la', 'lb': 'lb', 'lg': 'lg', 'li': 'li', 'ln': 'ln',\n  'lo': 'lo', 'lt': 'lt', 'lu': 'lu', 'lv': 'lv', 'mg': 'mg', 'mh': 'mh',\n  'mi': 'mi', 'mk': 'mk', 'ml': 'ml', 'mn': 'mn', 'mo': 'mo', 'mr': 'mr',\n  'ms': 'ms', 'mt': 'mt', 'my': 'my', 'na': 'na', 'nb': 'nb', 'nd': 'nd',\n  'ne': 'ne', 'ng': 'ng', 'nl': 'nl', 'nn': 'nn', 'no': 'no', 'nr': 'nr',\n  'nv': 'nv', 'ny': 'ny', 'oc': 'oc', 'oj': 'oj', 'om': 'om', 'or': 'or',\n  'os': 'os', 'pa': 'pa', 'pi': 'pi', 'pl': 'pl', 'ps': 'ps', 'pt': 'pt',\n  'qu': 'qu', 'rm': 'rm', 'rn': 'rn', 'ro': 'ro', 'ru': 'ru', 'rw': 'rw',\n  'sa': 'sa', 'sc': 'sc', 'sd': 'sd', 'se': 'se', 'sg': 'sg', 'sh': 'sh',\n  'si': 'si', 'sk': 'sk', 'sl': 'sl', 'sm': 'sm', 'sn': 'sn', 'so': 'so',\n  'sq': 'sq', 'sr': 'sr', 'ss': 'ss', 'st': 'st', 'su': 'su', 'sv': 'sv',\n  'sw': 'sw', 'ta': 'ta', 'te': 'te', 'tg': 'tg', 'th': 'th', 'ti': 'ti',\n  'tk': 'tk', 'tl': 'tl', 'tn': 'tn', 'to': 'to', 'tr': 'tr', 'ts': 'ts',\n  'tt': 'tt', 'tw': 'tw', 'ty': 'ty', 'ug': 'ug', 'uk': 'uk', 'ur': 'ur',\n  'uz': 'uz', 've': 've', 'vi': 'vi', 'vo': 'vo', 'wa': 'wa', 'wo': 'wo',\n  'xh': 'xh', 'yi': 'yi', 'yo': 'yo', 'za': 'za', 'zh': 'zh', 'zu': 'zu',\n  'aar': 'aar', 'abk': 'abk', 'ave': 'ave', 'afr': 'afr', 'aka': 'aka',\n  'amh': 'amh', 'arg': 'arg', 'ara': 'ara', 'asm': 'asm', 'ava': 'ava',\n  'aym': 'aym', 'aze': 'aze', 'bak': 'bak', 'bel': 'bel', 'bul': 'bul',\n  'bih': 'bih', 'bis': 'bis', 'bam': 'bam', 'ben': 'ben', 'tib': 'tib',\n  'bod': 'bod', 'bre': 'bre', 'bos': 'bos', 'cat': 'cat', 'che': 'che',\n  'cha': 'cha', 'cos': 'cos', 'cre': 'cre', 'cze': 'cze', 'ces': 'ces',\n  'chu': 'chu', 'chv': 'chv', 'wel': 'wel', 'cym': 'cym', 'dan': 'dan',\n  'ger': 'ger', 'deu': 'deu', 'div': 'div', 'dzo': 'dzo', 'ewe': 'ewe',\n  'gre': 'gre', 'ell': 'ell', 'eng': 'eng', 'epo': 'epo', 'spa': 'spa',\n  'est': 'est', 'baq': 'baq', 'eus': 'eus', 'per': 'per', 'fas': 'fas',\n  'ful': 'ful', 'fin': 'fin', 'fij': 'fij', 'fao': 'fao', 'fre': 'fre',\n  'fra': 'fra', 'fry': 'fry', 'gle': 'gle', 'gla': 'gla', 'glg': 'glg',\n  'grn': 'grn', 'guj': 'guj', 'glv': 'glv', 'hau': 'hau', 'heb': 'heb',\n  'hin': 'hin', 'hmo': 'hmo', 'hrv': 'hrv', 'hat': 'hat', 'hun': 'hun',\n  'arm': 'arm', 'hye': 'hye', 'her': 'her', 'ina': 'ina', 'ind': 'ind',\n  'ile': 'ile', 'ibo': 'ibo', 'iii': 'iii', 'ipk': 'ipk', 'ido': 'ido',\n  'ice': 'ice', 'isl': 'isl', 'ita': 'ita', 'iku': 'iku', 'jpn': 'jpn',\n  'jav': 'jav', 'geo': 'geo', 'kat': 'kat', 'kon': 'kon', 'kik': 'kik',\n  'kua': 'kua', 'kaz': 'kaz', 'kal': 'kal', 'khm': 'khm', 'kan': 'kan',\n  'kor': 'kor', 'kau': 'kau', 'kas': 'kas', 'kur': 'kur', 'kom': 'kom',\n  'cor': 'cor', 'kir': 'kir', 'lat': 'lat', 'ltz': 'ltz', 'lug': 'lug',\n  'lim': 'lim', 'lin': 'lin', 'lao': 'lao', 'lit': 'lit', 'lub': 'lub',\n  'lav': 'lav', 'mlg': 'mlg', 'mah': 'mah', 'mao': 'mao', 'mri': 'mri',\n  'mac': 'mac', 'mkd': 'mkd', 'mal': 'mal', 'mon': 'mon', 'mol': 'mol',\n  'mar': 'mar', 'may': 'may', 'msa': 'msa', 'mlt': 'mlt', 'bur': 'bur',\n  'mya': 'mya', 'nau': 'nau', 'nob': 'nob', 'nde': 'nde', 'nep': 'nep',\n  'ndo': 'ndo', 'dut': 'dut', 'nld': 'nld', 'nno': 'nno', 'nor': 'nor',\n  'nbl': 'nbl', 'nav': 'nav', 'nya': 'nya', 'oci': 'oci', 'oji': 'oji',\n  'orm': 'orm', 'ori': 'ori', 'oss': 'oss', 'pan': 'pan', 'pli': 'pli',\n  'pol': 'pol', 'pus': 'pus', 'por': 'por', 'que': 'que', 'roh': 'roh',\n  'run': 'run', 'rum': 'rum', 'ron': 'ron', 'rus': 'rus', 'kin': 'kin',\n  'san': 'san', 'srd': 'srd', 'snd': 'snd', 'sme': 'sme', 'sag': 'sag',\n  'slo': 'slo', 'sin': 'sin', 'slk': 'slk', 'slv': 'slv', 'smo': 'smo',\n  'sna': 'sna', 'som': 'som', 'alb': 'alb', 'sqi': 'sqi', 'srp': 'srp',\n  'ssw': 'ssw', 'sot': 'sot', 'sun': 'sun', 'swe': 'swe', 'swa': 'swa',\n  'tam': 'tam', 'tel': 'tel', 'tgk': 'tgk', 'tha': 'tha', 'tir': 'tir',\n  'tuk': 'tuk', 'tgl': 'tgl', 'tsn': 'tsn', 'ton': 'ton', 'tur': 'tur',\n  'tso': 'tso', 'tat': 'tat', 'twi': 'twi', 'tah': 'tah', 'uig': 'uig',\n  'ukr': 'ukr', 'urd': 'urd', 'uzb': 'uzb', 'ven': 'ven', 'vie': 'vie',\n  'vol': 'vol', 'wln': 'wln', 'wol': 'wol', 'xho': 'xho', 'yid': 'yid',\n  'yor': 'yor', 'zha': 'zha', 'chi': 'chi', 'zho': 'zho', 'zul': 'zul',\n};\n\nexport default ValidLanguages;\n","// @flow\n\nconst scorm12 = {\n  CMIString256: '^.{0,255}$',\n  CMIString4096: '^.{0,4096}$',\n  CMITime: '^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$', // eslint-disable-line\n  CMITimespan: '^([0-9]{2,}):([0-9]{2}):([0-9]{2})(\\.[0-9]{1,2})?$', // eslint-disable-line\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{0,3})(\\.[0-9]*)?$', // eslint-disable-line\n  CMIIdentifier: '^[\\\\u0021-\\\\u007E\\\\s]{0,255}$',\n  CMIFeedback: '^.{0,255}$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMIStatus: '^(passed|completed|failed|incomplete|browsed)$',\n  CMIStatus2: '^(passed|completed|failed|incomplete|browsed|not attempted)$',\n  CMIExit: '^(time-out|suspend|logout|)$',\n  CMIType: '^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$',\n  CMIResult: '^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$', // eslint-disable-line\n  NAVEvent: '^(previous|continue)$',\n\n  // Data ranges\n  score_range: '0#100',\n  audio_range: '-1#100',\n  speed_range: '-100#100',\n  weighting_range: '-100#100',\n  text_range: '-1#1',\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    CMIIdentifier: '^\\\\w{1,255}$',\n  },\n};\n\nconst scorm2004 = {\n  CMIString200: '^[\\\\u0000-\\\\uFFFF]{0,200}$',\n  CMIString250: '^[\\\\u0000-\\\\uFFFF]{0,250}$',\n  CMIString1000: '^[\\\\u0000-\\\\uFFFF]{0,1000}$',\n  CMIString4000: '^[\\\\u0000-\\\\uFFFF]{0,4000}$',\n  CMIString64000: '^[\\\\u0000-\\\\uFFFF]{0,64000}$',\n  CMILang: '^([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?$|^$', // eslint-disable-line\n  CMILangString250: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,250}$)?$', // eslint-disable-line\n  CMILangcr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\}))(.*?)$', // eslint-disable-line\n  CMILangString250cr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\})?(.{0,250})?)?$', // eslint-disable-line\n  CMILangString4000: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,4000}$)?$', // eslint-disable-line\n  CMITime: '^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$',\n  CMITimespan: '^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$',\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$',\n  CMIIdentifier: '^\\\\S{1,250}[a-zA-Z0-9]$',\n  CMIShortIdentifier: '^[\\\\w\\\\.\\\\-\\\\_]{1,250}$', // eslint-disable-line\n  CMILongIdentifier: '^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$', // need to re-examine this\n  CMIFeedback: '^.*$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n  CMIIndexStore: '.N(\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMICStatus: '^(completed|incomplete|not attempted|unknown)$',\n  CMISStatus: '^(passed|failed|unknown)$',\n  CMIExit: '^(time-out|suspend|logout|normal)$',\n  CMIType: '^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$',\n  CMIResult: '^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$',\n  NAVEvent: '^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|\\{target=\\\\S{0,200}[a-zA-Z0-9]\\}choice|jump)$', // eslint-disable-line\n  NAVBoolean: '^(unknown|true|false$)',\n  NAVTarget: '^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$',\n\n  // Data ranges\n  scaled_range: '-1#1',\n  audio_range: '0#*',\n  speed_range: '0#*',\n  text_range: '-1#1',\n  progress_range: '0#1',\n};\n\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default Regex;\n","// @flow\nimport Regex from './regex';\n\nconst scorm2004_regex = Regex.scorm2004;\n\nconst learner = {\n  'true-false': {\n    format: '^true$|^false$',\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'choice': {\n    format: scorm2004_regex.CMILongIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n  },\n  'fill-in': {\n    format: scorm2004_regex.CMILangString250,\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'long-fill-in': {\n    format: scorm2004_regex.CMILangString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'matching': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'performance': {\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'sequencing': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'likert': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'numeric': {\n    format: scorm2004_regex.CMIDecimal,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'other': {\n    format: scorm2004_regex.CMIString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n};\n\nconst correct = {\n  'true-false': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: '^true$|^false$',\n    limit: 1,\n  },\n  'choice': {\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n    duplicate: false,\n    format: scorm2004_regex.CMILongIdentifier,\n  },\n  'fill-in': {\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMILangString250cr,\n  },\n  'long-fill-in': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: true,\n    format: scorm2004_regex.CMILangString4000,\n  },\n  'matching': {\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n  },\n  'performance': {\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n  },\n  'sequencing': {\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n  },\n  'likert': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    limit: 1,\n  },\n  'numeric': {\n    max: 2,\n    delimiter: '[:]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIDecimal,\n    limit: 1,\n  },\n  'other': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIString4000,\n    limit: 1,\n  },\n};\n\nconst Responses = {\n  learner: learner,\n  correct: correct,\n};\n\nexport default Responses;\n","// @flow\n\nimport APIConstants from './constants/api_constants';\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError extends Error {\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(errorCode: number, errorMessage: String, detailedMessage: String) {\n    super(errorMessage);\n    this.#errorCode = errorCode;\n    this.#errorMessage = errorMessage;\n    this.#detailedMessage = detailedMessage;\n  }\n\n  #errorCode;\n  #errorMessage;\n  #detailedMessage;\n\n  /**\n   * Getter for #errorCode\n   * @return {number}\n   */\n  get errorCode() {\n    return this.#errorCode;\n  }\n\n  /**\n   * Getter for #errorMessage\n   * @return {string}\n   */\n  get errorMessage() {\n    return this.#errorMessage;\n  }\n\n  /**\n   * Getter for #detailedMessage\n   * @return {string}\n   */\n  get detailedMessage() {\n    return this.#detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(errorCode, scorm12_errors[String(errorCode)].basicMessage, scorm12_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm12_errors['101'].basicMessage, scorm12_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(errorCode, aicc_errors[String(errorCode)].basicMessage, aicc_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, aicc_errors['101'].basicMessage, aicc_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(errorCode, scorm2004_errors[String(errorCode)].basicMessage, scorm2004_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm2004_errors['101'].basicMessage, scorm2004_errors['101'].detailMessage);\n    }\n  }\n}\n","// @flow\nexport const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\nconst designations = [\n  ['D', SECONDS_PER_DAY],\n  ['H', SECONDS_PER_HOUR],\n  ['M', SECONDS_PER_MINUTE],\n  ['S', SECONDS_PER_SECOND],\n];\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {Number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return '00:00:00';\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = '';\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n    msStr = '.' + msStr.split('.')[1];\n  }\n\n  return (hours + ':' + minutes + ':' + seconds).replace(/\\b\\d\\b/g,\n      '0$&') + msStr;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {Number} seconds\n * @return {String}\n */\nexport function getSecondsAsISODuration(seconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return 'PT0S';\n  }\n\n  let duration = 'P';\n  let remainder = seconds;\n\n  designations.forEach(([sign, current_seconds]) => {\n    let value = Math.floor(remainder / current_seconds);\n\n    remainder = remainder % current_seconds;\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (sign === 'S' && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if ((duration.indexOf('D') > 0 ||\n          sign === 'H' || sign === 'M' || sign === 'S') &&\n          duration.indexOf('T') === -1) {\n        duration += 'T';\n      }\n      duration += `${value}${sign}`;\n    }\n  });\n\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(timeString: String, timeRegex: RegExp) {\n  if (!timeString || typeof timeString !== 'string' ||\n      !timeString.match(timeRegex)) {\n    return 0;\n  }\n  const parts = timeString.split(':');\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return (hours * 3600) + (minutes * 60) + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(duration: String, durationRegex: RegExp) {\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, months, , days, hours, minutes, seconds] = new RegExp(\n      durationRegex).exec(duration) || [];\n\n  let result = 0.0;\n\n  result += (Number(seconds) * 1.0 || 0.0);\n  result += (Number(minutes) * 60.0 || 0.0);\n  result += (Number(hours) * 3600.0 || 0.0);\n  result += (Number(days) * (60 * 60 * 24.0) || 0.0);\n  result += (Number(years) * (60 * 60 * 24 * 365.0) || 0.0);\n\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n    first: String,\n    second: String,\n    durationRegex: RegExp) {\n  return getSecondsAsISODuration(\n      getDurationAsSeconds(first, durationRegex) +\n      getDurationAsSeconds(second, durationRegex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n    first: String,\n    second: String,\n    timeRegex: RegExp) {\n  return getSecondsAsHHMMSS(\n      getTimeAsSeconds(first, timeRegex) +\n      getTimeAsSeconds(\n          second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data) {\n  const result = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + '.' + p : p);\n        }\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, '');\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data) {\n  'use strict';\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result = {};\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = '';\n      let m = regex.exec(p);\n      while (m) {\n        cur = cur[prop] || (cur[prop] = (m[2] ? [] : {}));\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n      cur[prop] = data[p];\n    }\n  }\n  return result[''] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number) {\n  if (Math.floor(num) === num || String(num).indexOf('.') < 0) return 0;\n  const parts = num.toString().split('.')[1];\n  return parts.length || 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Scorm2004API from '../Scorm2004API';\n\nwindow.Scorm2004API = Scorm2004API;\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectProto","prototype","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","toNumber","isObject","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","value","type","isObjectLike","isSymbol","call","other","valueOf","replace","isBinary","test","slice","module","exports","CMIArray","ValidationError","ErrorCodes","APIConstants","unflatten","global_constants","scorm12_error_codes","scorm12","BaseAPI","error_codes","settings","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","xhr","JSON","parse","responseText","hasOwnProperty","status","SCORM_TRUE","errorCode","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","apiLogLevel","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","INITIALIZED","isTerminated","TERMINATED","cmi","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","CMIElement","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","message","GENERAL","commitCallback","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","CMIErrorCode","getLmsErrorMessageDetails","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","baseLength","messageString","fillChars","length","i","CMIElementBaseLength","j","str","tester","match","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","Error","_CMIElement","_value","methodName","scorm2004","structure","split","foundFirstIndex","invalidErrorMessage","invalidErrorCode","UNDEFINED_DATA_MODEL","substr","_isTargetValid","READ_ONLY_ELEMENT","_checkObjectHasProperty","stringMatches","validateCorrectResponse","index","isNaN","item","childArray","newChild","getChildElement","initialized","initialize","push","_foundFirstIndex","uninitializedErrorMessage","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","listenerName","callback","listenerFunctions","listenerSplit","removeIndex","findIndex","obj","splice","filter","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","substring","indexOf","errorNumber","success","_calculateTotalTime","json","testPattern","a","c","a_pattern","a_match","c_match","a_num","Number","c_num","int_pattern","obj_pattern","keys","map","key","sort","b","d","forEach","element","loadFromJSON","startingData","currentCMIElement","constructor","stringify","renderCMIToJSONString","_terminateCommit","url","params","immediate","api","process","genericError","httpReq","XMLHttpRequest","open","header","setRequestHeader","withCredentials","onload","Array","send","join","fetch","method","body","headers","credentials","keepalive","when","ScheduledCommit","API","wrapper","bind","commit","ADL","CMI","CMICommentsObject","CMIInteractionsCorrectResponsesObject","CMIInteractionsObject","CMIInteractionsObjectivesObject","CMIObjectivesObject","Utilities","Responses","ValidLanguages","Regex","scorm2004_constants","scorm2004_error_codes","correct_responses","correct","scorm2004_regex","Scorm2004API","finalSettings","mastery_override","correct_response","current_index","found","count","_count","adl","Initialize","lmsInitialize","Terminate","lmsTerminate","GetValue","lmsGetValue","SetValue","lmsSetValue","Commit","lmsCommit","GetLastError","lmsGetLastError","GetErrorString","lmsGetErrorString","GetDiagnostic","lmsGetDiagnostic","terminate","nav","request","getValue","setValue","getLastError","getErrorString","getDiagnostic","_commonSetCMIValue","parts","interaction","interactions","DEPENDENCY_NOT_ESTABLISHED","checkDuplicateChoiceResponse","response_type","checkValidResponseType","GENERAL_SET_FAILURE","interaction_type","nodes","delimiter","checkCorrectResponseValue","interaction_count","response","pattern","pattern_index","limit","duplicate","checkDuplicatedPattern","_commonGetCMIValue","detail","basicMessage","detailMessage","error_descriptions","formatRegex","RegExp","format","removeCorrectResponsePrefixes","delimiter2","values","matches","TYPE_MISMATCH","format2","unique","node","seenOrder","seenCase","seenLang","prefixRegex","langMatches","CMILangcr","lang","toLowerCase","newAPI","terminateCommit","cmiExport","renderCMIToJSONObject","total_time","getCurrentTotalTime","flattened","flatten","mode","credit","completion_threshold","progress_measure","completion_status","scaled_passing_score","score","scaled","success_status","navRequest","encodeURIComponent","renderCommitCMI","processHttpRequest","scorm12_constants","scorm12_regex","checkValidFormat","regexPattern","errorClass","allowEmptyString","checkValidRange","rangePattern","ranges","BaseCMI","getTime","CMIScore","score_children","score_range","invalidTypeCode","invalidRangeCode","decimalRegex","INVALID_SET_VALUE","VALUE_OUT_OF_RANGE","CMIDecimal","_children","raw","jsonString","children","Scorm2004ValidationError","Util","learner_responses","learner","throwReadOnlyError","throwWriteOnlyError","WRITE_ONLY_ELEMENT","throwTypeMismatchError","throwDependencyNotEstablishedError","throwGeneralSetError","check2004ValidFormat","check2004ValidRange","cmi_children","learner_preference","CMILearnerPreference","Scorm2004CMIScore","comments_from_learner","CMICommentsFromLearner","comments_from_lms","CMICommentsFromLMS","CMIInteractions","objectives","CMIObjectives","_version","CMICStatus","entry","exit","CMIExit","launch_data","learner_id","learner_name","location","CMIString1000","max_time_allowed","progress_range","session_time","CMITimespan","CMISStatus","suspend_data","CMIString64000","time_limit_action","sessionTime","startTime","start_time","seconds","getSecondsAsISODuration","addTwoDurations","student_preference_children","audio_level","audio_range","language","CMILang","delivery_speed","speed_range","audio_captioning","CMISInteger","text_range","interactions_children","objectives_children","comments_children","correct_responses_children","id","CMILongIdentifier","CMIType","timestamp","CMITime","weighting","learner_response","CMIResult","latency","description","CMILangString250","scaled_range","readOnlyAfterInit","comment","CMILangString4000","CMIString250","CMIFeedback","ADLNav","request_valid","ADLNavRequestValid","NAVEvent","_target","_","previous","continue","LOG_LEVEL_NONE","core_children","student_data_children","aicc","student_demographics_children","tries_children","attempt_records_children","paths_children","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","MULTIPLE_TERMINATIONS","CMIString256","CMIString4096","CMIInteger","CMIIdentifier","CMIIndex","CMIStatus","CMIStatus2","weighting_range","CMIString200","CMIString4000","CMILangString250cr","CMIShortIdentifier","CMIIndexStore","NAVBoolean","NAVTarget","scorm12_errors","aicc_errors","scorm2004_errors","errorMessage","detailedMessage","Scorm12ValidationError","AICCValidationError","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","getSecondsAsHHMMSS","totalSeconds","hours","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","duration","remainder","sign","current_seconds","getTimeAsSeconds","timeString","timeRegex","getDurationAsSeconds","durationRegex","exec","years","months","days","first","second","addHHMMSSTimeStrings","data","recurse","cur","prop","isArray","l","isEmpty","p","regex","m","num","window"],"sourceRoot":""}